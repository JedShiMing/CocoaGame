{"version":3,"sources":["../../../../assets/scripts/assets/scripts/Star.js"],"names":["cc","Class","extends","Component","properties","pickRadius","onLoad","start","getPlayerDistance","playerPos","game","player","getPosition","dist","node","position","sub","mag","onPicked","spawnNewStar","destroy","update","dt","opacityRatio","timer","starDuration","minOpacity","opacity","Math","floor","gainScore"],"mappings":";;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAA,GAAGC,KAAH;AACIC,aAASF,GAAGG,SADhB;;AAGIC,gBAAY;AACRC,oBAAY;AADJ,KAHhB;;AAOI;;AAEAC,UATJ,oBASa,CAAE,CATf;AAWIC,SAXJ,mBAWY,CAEP,CAbL;;;AAeIC,uBAAmB,6BAAY;AAC3B;AACA,YAAIC,YAAY,KAAKC,IAAL,CAAUC,MAAV,CAAiBC,WAAjB,EAAhB;AACA;AACA,YAAIC,OAAO,KAAKC,IAAL,CAAUC,QAAV,CAAmBC,GAAnB,CAAuBP,SAAvB,EAAkCQ,GAAlC,EAAX;AACA,eAAOJ,IAAP;AACH,KArBL;;AAuBIK,cAAU,oBAAY;AAClB;AACA,aAAKR,IAAL,CAAUS,YAAV;AACA;AACA,aAAKL,IAAL,CAAUM,OAAV;AACH,KA5BL;;AA8BIC,UA9BJ,kBA8BWC,EA9BX,EA8Be;AACP;AACA,YAAI,KAAKd,iBAAL,KAA2B,KAAKH,UAApC,EAAgD;AAC5C;AACA,iBAAKa,QAAL;AACA;AACH;AACD;AACA,YAAIK,eAAe,IAAI,KAAKb,IAAL,CAAUc,KAAV,GAAkB,KAAKd,IAAL,CAAUe,YAAnD;AACA,YAAIC,aAAa,EAAjB;AACA,aAAKZ,IAAL,CAAUa,OAAV,GAAoBD,aAAaE,KAAKC,KAAL,CAAWN,gBAAgB,MAAMG,UAAtB,CAAX,CAAjC;AACH;AAzCL,eA2Cc,oBAAY;AAClB;AACA,SAAKhB,IAAL,CAAUS,YAAV;AACA;AACA,SAAKT,IAAL,CAAUoB,SAAV;AACA;AACA,SAAKhB,IAAL,CAAUM,OAAV;AACH,CAlDL","file":"Star.js","sourceRoot":"../../../../assets/scripts","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        pickRadius: 0,\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad() {},\n\n    start() {\n\n    },\n\n    getPlayerDistance: function () {\n        // 根据 player 节点位置判断距离\n        var playerPos = this.game.player.getPosition();\n        // 根据两点位置计算两点之间距离\n        var dist = this.node.position.sub(playerPos).mag();\n        return dist;\n    },\n\n    onPicked: function () {\n        // 当星星被收集时，调用 Game 脚本中的接口，生成一个新的星星\n        this.game.spawnNewStar();\n        // 然后销毁当前星星节点\n        this.node.destroy();\n    },\n\n    update(dt) {\n        // 每帧判断和主角之间的距离是否小于收集距离\n        if (this.getPlayerDistance() < this.pickRadius) {\n            // 调用收集行为\n            this.onPicked();\n            return;\n        }\n        // 根据 Game 脚本中的计时器更新星星的透明度\n        var opacityRatio = 1 - this.game.timer / this.game.starDuration;\n        var minOpacity = 50;\n        this.node.opacity = minOpacity + Math.floor(opacityRatio * (255 - minOpacity));\n    },\n\n    onPicked: function () {\n        // 当星星被收集时，调用 Game 脚本中的接口，生成一个新的星星\n        this.game.spawnNewStar();\n        // 调用 Game 脚本的得分方法\n        this.game.gainScore();\n        // 然后销毁当前星星节点\n        this.node.destroy();\n    },\n});"]}