// var BUTTON_TYPE = cc.Class({ NORMAL, START });
var BUTTON_TYPE = cc.Enum({
    NORMAL: -1,
    START: -1,
    GOLD: -1,
    CRYSTAL: -1,
});
cc.Class({
    extends: cc.Component,

    editor: {
        menu: 'ApplicationFramework/AFClickWidgetAttach'
    },

    properties: {
        clickEffect: {
            url: cc.AudioClip,
            default: null,
            displayName: '点击音效'
        },

        enableClickAudioEffect: {
            default: true,
            displayName: "开启点击音效"
        },
        buttonType: {
            type: BUTTON_TYPE,
            default: BUTTON_TYPE.NORMAL,
            displayName: '按钮类型',
            tooltip: '气泡或者正常'
        },
    },

    // use this for initialization
    onLoad: function () {
        this.node.on('touchend', this.onClicked, this);
    },

    onDestroy: function () {
        this.node.off('touchend', this.onClicked, this);
    },

    onClicked: function () {
        if (!this.enableClickAudioEffect) { return; }
        var btn = this.getComponent('cc.Button');
        if (!btn) {
            btn = this.getComponent('cc.Toggle');
        }
        if (!btn.interactable || !btn.enabledInHierarchy) {
            AF.audio.playButtonEffect('button_disable');
            return;
        }
        if (!btn._pressed) { return; }
        if (this.buttonType === BUTTON_TYPE.NORMAL) {
            AF.audio.playButtonEffect('button');
        } else if (this.buttonType === BUTTON_TYPE.START) {
            AF.audio.playButtonEffect('bubble');
        } else if (this.buttonType === BUTTON_TYPE.GOLD) {
            AF.audio.playButtonEffect('gold');
        } else if (this.buttonType === BUTTON_TYPE.CRYSTAL) {
            AF.audio.playButtonEffect('crystal');
        }
    },
});
