{"version":3,"sources":["af-frameloader.js"],"names":["RESOURCES_TYPE","EFFECT","PLAYER","SCENE","baseKey","k","loadResourcesFile","url","Promise","resolve","rejec","cc","loader","load","err","res","Frameloader","init","loadingFiles","startLoadFile","name","type","processLoadEffectFile","processLoadPlayerFile","processLoadSceneFile","getUrl","filename","AF","platform","isWxApp","isQQApp","util","getLocalFilePath","isLocalFileExist","getRemoteUrl","pictureUrl","plistUrl","self","all","then","picture","plist","frames","getFrames","emitLoadEnded","getFrameOfScene","sourcePicture","sourcePlist","startActionIndex","actionIndex","index","actionName","Const","ActionName","Array","join","slice","hasOwnProperty","length","sp","createSpriteFrame","push","frameInfo","frame","parseNums","rotated","offset","sourceSize","rect","pos","v2","size","SpriteFrame","keys","Object","i","succ","EventDispatcher","emit","Event","FILE_LOADFRAME","module","exports"],"mappings":"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","file":"af-frameloader.js","sourceRoot":"../../../../../assets/framework/utils","sourcesContent":["/**\r\n * 散图加载管理器函数\r\n */\r\nvar RESOURCES_TYPE = {\r\n    EFFECT: 0,\r\n    PLAYER: 0,\r\n    SCENE: 0,\r\n};\r\n\r\nvar baseKey = 0;\r\nfor (var k in RESOURCES_TYPE) {\r\n    RESOURCES_TYPE[k] = ++baseKey;\r\n}\r\n\r\nfunction loadResourcesFile(url) {\r\n    return new Promise(function (resolve, rejec) {\r\n        cc.loader.load(url, function (err, res) {\r\n            if (err) {\r\n                rejec(err);\r\n                return;\r\n            }\r\n            resolve(res);\r\n        });\r\n    });\r\n}\r\n\r\nvar Frameloader = {\r\n    init: function () {\r\n        this.loadingFiles = {};\r\n    },\r\n\r\n    startLoadFile: function (name, type) {\r\n        //type 1 effect 2 player 3 scene\r\n\r\n        if (this.loadingFiles[name]) { return; }\r\n\r\n        this.loadingFiles[name] = { name: name, type: type };\r\n\r\n        switch (type) {\r\n            case RESOURCES_TYPE.EFFECT:\r\n                this.processLoadEffectFile(name);\r\n                break;\r\n            case RESOURCES_TYPE.PLAYER:\r\n                this.processLoadPlayerFile(name);\r\n                break;\r\n            case RESOURCES_TYPE.SCENE:\r\n                this.processLoadSceneFile(name);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    },\r\n\r\n    getUrl: function (filename) {\r\n        var url = '';\r\n        if (AF.platform.isWxApp() || AF.platform.isQQApp()) {\r\n            url = AF.util.getLocalFilePath(filename);\r\n\r\n            if (!AF.util.isLocalFileExist(filename)) {\r\n                url = AF.util.getRemoteUrl(filename);\r\n            }\r\n        }\r\n        else {\r\n            url = AF.util.getRemoteUrl(filename);\r\n        }\r\n        return url;\r\n    },\r\n    \r\n    processLoadEffectFile: function (name) {\r\n        var pictureUrl = this.getUrl('effect/' + name + '.png');\r\n        var plistUrl = this.getUrl('effect/' + name + '.plist');\r\n        var self = this;\r\n        Promise.all([loadResourcesFile(pictureUrl), loadResourcesFile(plistUrl)]).then((res) => {\r\n            var picture = res[0];\r\n            var plist = res[1];\r\n            var frames = self.getFrames(picture, plist, name, 0);\r\n            self.emitLoadEnded(name, frames, true);\r\n        }, (err) => {\r\n            self.emitLoadEnded(name, [], false);\r\n        });\r\n    },\r\n\r\n    processLoadPlayerFile: function (name) {\r\n        var pictureUrl = this.getUrl('player/' + name + '.png');\r\n        var plistUrl = this.getUrl('player/' + name + '.plist');\r\n        var self = this;\r\n        Promise.all([loadResourcesFile(pictureUrl), loadResourcesFile(plistUrl)]).then((res) => {\r\n            var picture = res[0];\r\n            var plist = res[1];\r\n            var frames = self.getFrames(picture, plist, name, 1);\r\n            self.emitLoadEnded(name, frames, true);\r\n        }, (err) => {\r\n            self.emitLoadEnded(name, [], false);\r\n        });\r\n    },\r\n\r\n    processLoadSceneFile: function (name) {\r\n        var pictureUrl = this.getUrl('scene/' + name + '.png');\r\n        var plistUrl = this.getUrl('scene/' + name + '.plist');\r\n        var self = this;\r\n        Promise.all([loadResourcesFile(pictureUrl), loadResourcesFile(plistUrl)]).then((res) => {\r\n            var picture = res[0];\r\n            var plist = res[1];\r\n            var frames = self.getFrameOfScene(picture, plist, name, 1);\r\n            self.emitLoadEnded(name, frames, true);\r\n        }, (err) => {\r\n            self.emitLoadEnded(name, {}, false);\r\n        });\r\n    }, \r\n\r\n    getFrames: function (sourcePicture, sourcePlist, name, startActionIndex) {\r\n        var actionIndex = startActionIndex;\r\n        var index = 1;\r\n        var frames = [[], []];\r\n\r\n        while (true) {\r\n            var actionName = AF.Const.ActionName[actionIndex];\r\n\r\n            var filename = name;\r\n            if (actionName !== '') {\r\n                filename += '_';\r\n                filename += actionName;\r\n            }\r\n            filename += '_';\r\n            filename += (Array(4).join(0) + index).slice(-4);\r\n            filename += '.png';\r\n            \r\n            if (!frames[actionIndex]) {\r\n                frames[actionIndex] = [];\r\n            }\r\n\r\n            if (!sourcePlist.frames.hasOwnProperty(filename)) {\r\n                if (actionIndex > 0 && actionIndex < AF.Const.ActionName.length - 1) {\r\n                    actionIndex++;\r\n                    index = 1;\r\n                    continue;\r\n                } else {\r\n                    break;\r\n                }\r\n            }\r\n            var sp = this.createSpriteFrame(sourcePicture, sourcePlist.frames[filename]);\r\n            frames[actionIndex].push(sp);\r\n            index++;\r\n        }\r\n        return frames;\r\n    },\r\n\r\n    createSpriteFrame: function (sourcePicture, frameInfo) {\r\n        var frame = AF.util.parseNums(frameInfo.frame);\r\n        var rotated = frameInfo.rotated;\r\n        var offset = AF.util.parseNums(frameInfo.offset);\r\n        var sourceSize = AF.util.parseNums(frameInfo.sourceSize);\r\n\r\n        var rect = cc.rect(frame[0], frame[1], frame[2], frame[3]);\r\n        var pos = cc.v2(offset[0], offset[1]);\r\n        var size = cc.size(sourceSize[0], sourceSize[1]);\r\n        return new cc.SpriteFrame(sourcePicture, rect, rotated, pos, size);\r\n    },\r\n\r\n    getFrameOfScene: function (sourcePicture, sourcePlist) {\r\n        var frames = {};\r\n        var keys = Object.keys(sourcePlist.frames);\r\n        for (let i = 0; i < keys.length; i++) {\r\n            var filename = keys[i];\r\n            var sp = this.createSpriteFrame(sourcePicture, sourcePlist.frames[filename]);\r\n            frames[filename] = sp;\r\n        }\r\n        return frames;\r\n    },\r\n\r\n    emitLoadEnded: function (filename, frames, succ) {\r\n        this.loadingFiles[filename] = null;\r\n        AF.EventDispatcher.emit(AF.Event.FILE_LOADFRAME, filename, frames, succ);\r\n    },\r\n\r\n};\r\n\r\nFrameloader.init();\r\n\r\nAF.Frameloader = module.exports = Frameloader;\r\n"]}