{"version":3,"sources":["af-base64.js"],"names":["_keyStr","_utf8_encode","string","replace","utftext","n","length","c","charCodeAt","String","fromCharCode","_utf8_decode","i","c1","c2","c3","base64","base64Encode","input","output","chr1","chr2","chr3","enc1","enc2","enc3","enc4","isNaN","charAt","base64Decode","indexOf","AF","window","util","cc","js","mixin","module","exports"],"mappings":"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","file":"af-base64.js","sourceRoot":"../../../../../assets/framework/utils","sourcesContent":["/**\r\n * 快速hash\r\n */\r\n\r\nvar _keyStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\r\n\r\n// private method for UTF-8 encoding\r\nvar _utf8_encode = function (string) {\r\n    string = string.replace(/\\r\\n/g,\"\\n\");\r\n    var utftext = \"\";\r\n    for (var n = 0; n < string.length; n++) {\r\n        var c = string.charCodeAt(n);\r\n        if (c < 128) {\r\n            utftext += String.fromCharCode(c);\r\n        } else if((c > 127) && (c < 2048)) {\r\n            utftext += String.fromCharCode((c >> 6) | 192);\r\n            utftext += String.fromCharCode((c & 63) | 128);\r\n        } else {\r\n            utftext += String.fromCharCode((c >> 12) | 224);\r\n            utftext += String.fromCharCode(((c >> 6) & 63) | 128);\r\n            utftext += String.fromCharCode((c & 63) | 128);\r\n        }\r\n\r\n    }\r\n    return utftext;\r\n};\r\n\r\n// private method for UTF-8 decoding\r\nvar _utf8_decode = function (utftext) {\r\n    var string = \"\";\r\n    var i = 0;\r\n    var c1, c2, c;\r\n    c = c1 = c2 = 0;\r\n    while ( i < utftext.length ) {\r\n        c = utftext.charCodeAt(i);\r\n        if (c < 128) {\r\n            string += String.fromCharCode(c);\r\n            i++;\r\n        } else if((c > 191) && (c < 224)) {\r\n            c2 = utftext.charCodeAt(i+1);\r\n            string += String.fromCharCode(((c & 31) << 6) | (c2 & 63));\r\n            i += 2;\r\n        } else {\r\n            c2 = utftext.charCodeAt(i+1);\r\n            c3 = utftext.charCodeAt(i+2);\r\n            string += String.fromCharCode(((c & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\r\n            i += 3;\r\n        }\r\n    }\r\n    return string;\r\n};\r\n\r\nvar base64 = {\r\n    // public method for encoding\r\n\tbase64Encode: function (input) {\r\n\t\tvar output = \"\";\r\n\t\tvar chr1, chr2, chr3, enc1, enc2, enc3, enc4;\r\n\t\tvar i = 0;\r\n\t\tinput = _utf8_encode(input);\r\n\t\twhile (i < input.length) {\r\n\t\t\tchr1 = input.charCodeAt(i++);\r\n\t\t\tchr2 = input.charCodeAt(i++);\r\n\t\t\tchr3 = input.charCodeAt(i++);\r\n\t\t\tenc1 = chr1 >> 2;\r\n\t\t\tenc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\r\n\t\t\tenc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\r\n\t\t\tenc4 = chr3 & 63;\r\n\t\t\tif (isNaN(chr2)) {\r\n\t\t\t\tenc3 = enc4 = 64;\r\n\t\t\t} else if (isNaN(chr3)) {\r\n\t\t\t\tenc4 = 64;\r\n\t\t\t}\r\n\t\t\toutput = output +\r\n\t\t\t\t_keyStr.charAt(enc1) + _keyStr.charAt(enc2) +\r\n\t\t\t\t_keyStr.charAt(enc3) + _keyStr.charAt(enc4);\r\n\t\t}\r\n\t\treturn output;\r\n\t},\r\n\r\n\t// public method for decoding\r\n\tbase64Decode: function (input) {\r\n\t\tvar output = \"\";\r\n\t\tvar chr1, chr2, chr3;\r\n\t\tvar enc1, enc2, enc3, enc4;\r\n\t\tvar i = 0;\r\n\t\tinput = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\r\n\t\twhile (i < input.length) {\r\n\t\t\tenc1 = _keyStr.indexOf(input.charAt(i++));\r\n\t\t\tenc2 = _keyStr.indexOf(input.charAt(i++));\r\n\t\t\tenc3 = _keyStr.indexOf(input.charAt(i++));\r\n\t\t\tenc4 = _keyStr.indexOf(input.charAt(i++));\r\n\t\t\tchr1 = (enc1 << 2) | (enc2 >> 4);\r\n\t\t\tchr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\r\n\t\t\tchr3 = ((enc3 & 3) << 6) | enc4;\r\n\t\t\toutput = output + String.fromCharCode(chr1);\r\n\t\t\tif (enc3 != 64) {\r\n\t\t\t\toutput = output + String.fromCharCode(chr2);\r\n\t\t\t}\r\n\t\t\tif (enc4 != 64) {\r\n\t\t\t\toutput = output + String.fromCharCode(chr3);\r\n\t\t\t}\r\n\t\t}\r\n\t\toutput = _utf8_decode(output);\r\n\t\treturn output;\r\n\t}\r\n};\r\n\r\nvar AF = window.AF = window.AF || {};\r\nAF.util = AF.util || {};\r\ncc.js.mixin(AF.util, base64);\r\n\r\nmodule.exports = base64;"]}