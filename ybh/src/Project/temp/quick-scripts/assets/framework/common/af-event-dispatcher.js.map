{"version":3,"sources":["af-event-dispatcher.js"],"names":["List","require","EventDispatcher","eventGroup","getEvent","eventKey","on","selector","target","cc","error","pushBack","off","removeIf","item","emit","argv","i","len","arguments","length","arg","push","forEach","apply","once","self","cb","module","exports","window","AF"],"mappings":";;;;AAAA;;AAEA,IAAIA,OAAOC,QAAQ,QAAR,CAAX;;AAEA,IAAIC,kBAAkB,EAAtB;AACAA,gBAAgBC,UAAhB,GAA6B,EAA7B;;AAEAD,gBAAgBE,QAAhB,GAA2B,UAAUC,QAAV,EAAoB;AAC3C,WAAOH,gBAAgBC,UAAhB,CAA2BE,QAA3B,IAAwCH,gBAAgBC,UAAhB,CAA2BE,QAA3B,KAAwC,IAAIL,IAAJ,EAAvF;AACH,CAFD;;AAIAE,gBAAgBI,EAAhB,GAAqB,UAAUD,QAAV,EAAoBE,QAApB,EAA8BC,MAA9B,EAAsC;AACvD,QAAI,CAACD,QAAL,EAAe;AACXE,WAAGC,KAAH,CAAS,8BAAT;AACH;AACDH,gBAAYL,gBAAgBE,QAAhB,CAAyBC,QAAzB,EAAmCM,QAAnC,CAA4C,EAAEJ,UAAUA,QAAZ,EAAsBC,QAAQA,MAA9B,EAA5C,CAAZ;AACH,CALD;;AAOAN,gBAAgBU,GAAhB,GAAsB,UAAUP,QAAV,EAAoBE,QAApB,EAA8BC,MAA9B,EAAsC;AACxDN,oBAAgBE,QAAhB,CAAyBC,QAAzB,EAAmCQ,QAAnC,CAA4C,UAAUC,IAAV,EAAgB;AACxD,eAAOA,KAAKP,QAAL,IAAiBA,QAAjB,IAA6BO,KAAKN,MAAL,IAAeA,MAAnD;AACH,KAFD;AAGH,CAJD;;AAMAN,gBAAgBa,IAAhB,GAAuB,UAAUV,QAAV,EAAoB;AACvC,QAAIW,OAAO,EAAX;AACA,SAAK,IAAIC,IAAI,CAAR,EAAWC,MAAMC,UAAUC,MAAhC,EAAwCH,IAAIC,GAA5C,EAAiD,EAAED,CAAnD,EAAsD;AAClD,YAAII,MAAMF,UAAUF,CAAV,CAAV;AACAD,aAAKM,IAAL,CAAUD,GAAV;AACH;;AAED,WAAOnB,gBAAgBE,QAAhB,CAAyBC,QAAzB,EAAmCkB,OAAnC,CAA2C,UAAUT,IAAV,EAAgB;AAC9D,eAAOA,KAAKP,QAAL,CAAciB,KAAd,CAAoBV,KAAKN,MAAzB,EAAiCQ,IAAjC,CAAP;AACH,KAFM,CAAP;AAGH,CAVD;;AAYAd,gBAAgBuB,IAAhB,GAAuB,UAAUpB,QAAV,EAAoBE,QAApB,EAA8BC,MAA9B,EAAsC;AACzD,QAAIkB,OAAO,IAAX;AACA,QAAIC,KAAK,SAALA,EAAK,GAAY;AACjBD,aAAKd,GAAL,CAASP,QAAT,EAAmBsB,EAAnB,EAAuBnB,MAAvB;AACAD,iBAASiB,KAAT,CAAe,IAAf,EAAqBL,SAArB;AACH,KAHD;AAIA,SAAKb,EAAL,CAAQD,QAAR,EAAkBsB,EAAlB,EAAsBnB,MAAtB;AACH,CAPD;;AASAoB,OAAOC,OAAP,GAAiB,CAACC,OAAOC,EAAP,GAAYD,OAAOC,EAAP,IAAa,EAA1B,EAA8B7B,eAA9B,GAAgDA,eAAjE","file":"af-event-dispatcher.js","sourceRoot":"../../../../../assets/framework/common","sourcesContent":["'use strict';\r\n\r\nvar List = require('AFList')\r\n\r\nvar EventDispatcher = {};\r\nEventDispatcher.eventGroup = {};\r\n\r\nEventDispatcher.getEvent = function (eventKey) {\r\n    return EventDispatcher.eventGroup[eventKey] = (EventDispatcher.eventGroup[eventKey] || new List());\r\n};\r\n\r\nEventDispatcher.on = function (eventKey, selector, target) {\r\n    if (!selector) {\r\n        cc.error(\"invalid addListener selector\");\r\n    }\r\n    selector && EventDispatcher.getEvent(eventKey).pushBack({ selector: selector, target: target });\r\n};\r\n\r\nEventDispatcher.off = function (eventKey, selector, target) {\r\n    EventDispatcher.getEvent(eventKey).removeIf(function (item) {\r\n        return item.selector == selector && item.target == target;\r\n    });\r\n};\r\n\r\nEventDispatcher.emit = function (eventKey) {\r\n    var argv = [];\r\n    for (var i = 1, len = arguments.length; i < len; ++i) {\r\n        var arg = arguments[i];\r\n        argv.push(arg);\r\n    }\r\n\r\n    return EventDispatcher.getEvent(eventKey).forEach(function (item) {\r\n        return item.selector.apply(item.target, argv);\r\n    });\r\n};\r\n\r\nEventDispatcher.once = function (eventKey, selector, target) {\r\n    var self = this;\r\n    var cb = function () {\r\n        self.off(eventKey, cb, target);\r\n        selector.apply(this, arguments);\r\n    };\r\n    this.on(eventKey, cb, target);\r\n};\r\n\r\nmodule.exports = (window.AF = window.AF || {}).EventDispatcher = EventDispatcher;\r\n"]}