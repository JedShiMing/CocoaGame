{"version":3,"sources":["af-scene-mgr.js"],"names":["EventDispatcher","require","Event","Const","Config","DEFAULT_SWITCH_SCENE_ANIM","SceneManager","window","AF","SceneMgr","cc","Class","extends","Component","properties","statics","instance","onLoad","_active","game","addPersistRootNode","node","zIndex","TOP_Z_ORDER","_enableSwitchSceneAnim","_switchingSceneFlags","sceneLoaded","inAnimationDone","targetSceneName","switching","_curSceneName","_sceneParams","_dialogStack","_dialogCache","_preloadingDialog","_tryToOpenDialog","undefined","_sceneDialog","_dialogParams","emit","GAME_LOADED","on","SCENE_LOADED","sceneLoadedMsg","addSwitchSceneAinm","setEnableSwitchSceneAnim","state","onEnable","onDestroy","off","removePersistRootNode","getCurSceneParams","getCurDialogParams","getCurSceneName","isSwitchingScene","switchScene","sceneName","params","flags","warn","curScene","director","getScene","_switchSceneCB","BEFORE_SCENE_LAUNCH","_switchSceneAnimIn","self","preloadScene","_loadScene","loadScene","AFTER_SCENE_LAUNCH","_clearDialogCacheAndStack","bind","_switchSceneAnimOut","name","prefabPath","loader","loadRes","err","prefab","error","instantiate","animNode","getChildByName","Node","ANIM_Z_ORDER","addChild","tn","removeFromParent","active","anim","_getSwitchAnimComponent","playOutAnim","playInAnim","comp","getComponent","registerDialog","dialogName","unregisterDialog","i","length","v","splice","_loadDialog","_dialogPaths","d","getDialogList","dialogs","dialogPath","setPosition","winSize","width","height","DIALOG_Z_ORDER","preloadDialog","dialogNode","_pushDialogToStack","onOpened","openDialog","_hasDialogInStack","dialog","onDialogClosed","len","destroy","getCurDialog","selfComp","noHideOtherDialog","prevDialog","noHideBelowDialog","isClosing","push","SCENE_PARAMS","DIALOG_PARAMS","gotoScene","argv","WILL_OPEN_DIALOG","log","EVENT_HIDE","console","GMAE_ON_HIDE","EVENT_SHOW","GAME_ON_SHOW"],"mappings":"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","file":"af-scene-mgr.js","sourceRoot":"../../../../../../assets/framework/ui/mgr","sourcesContent":["/**\r\n * 场景管理器\r\n */\r\n\r\nvar EventDispatcher = require(\"af-event-dispatcher\");\r\nvar Event = require(\"af-event\");\r\nvar Const = require(\"af-const\");\r\nvar Config = require(\"af-config-mgr\");\r\n\r\n// var DEFAULT_SWITCH_SCENE_ANIM = \"framework/prefabs/DefaultSwitchSceneAnimStyle\";\r\nvar DEFAULT_SWITCH_SCENE_ANIM = \"framework/prefabs/loading\";\r\n\r\nvar SceneManager = (window.AF = window.AF || {}).SceneMgr = cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {},\r\n\r\n    statics: {\r\n        // 实例\r\n        instance: null,\r\n    },\r\n\r\n    // use this for initialization\r\n    onLoad: function () {\r\n        if (SceneManager.instance) {\r\n            return;\r\n        }\r\n        SceneManager.instance = this;\r\n        this._active = true;\r\n        // 设置常驻节点\r\n        cc.game.addPersistRootNode(this.node);\r\n        this.node.zIndex = Const.TOP_Z_ORDER;\r\n\r\n        this._enableSwitchSceneAnim = false;    // 启用切换场景动画\r\n        this._switchingSceneFlags = {\r\n            sceneLoaded: false,                 // 标记目标场景是否加载完成\r\n            inAnimationDone: false,             // 切换场景动画进入部分是否完成\r\n            targetSceneName: null,              // 跳转的目标场景名\r\n            switching: false,                   // 正在切换\r\n        }\r\n\r\n        this._curSceneName = '';       // 当前场景名\r\n        this._sceneParams = null;     // 切换场景时传递的参数\r\n        this._dialogStack = [];       // 对话框堆栈\r\n        this._dialogCache = {};       // 对话框缓存\r\n        this._preloadingDialog = {};       // 预加载中的对话框\r\n        this._tryToOpenDialog = undefined; // 尝试打开的对话框\r\n\r\n        this._sceneDialog = {};       // 已经挂在当前场景节点上的dialog\r\n        this._dialogParams = null;     // 打开对话框传递的参数\r\n\r\n        // 发布游戏加载完成消息\r\n        EventDispatcher.emit(Event.GAME_LOADED);\r\n        //注册场景加载完成消息回调\r\n        EventDispatcher.on(Event.SCENE_LOADED, this.sceneLoadedMsg, this);\r\n\r\n        this.addSwitchSceneAinm('default', DEFAULT_SWITCH_SCENE_ANIM);\r\n        this._enableSwitchSceneAnim = true;\r\n    },\r\n\r\n    setEnableSwitchSceneAnim: function (state) {\r\n        this._enableSwitchSceneAnim = state;\r\n    },\r\n\r\n    onEnable: function () {\r\n        this.node.zIndex = Const.TOP_Z_ORDER;\r\n    },\r\n    onDestroy: function () {\r\n        if (!this._active) return;\r\n        // 移除常驻节点\r\n        EventDispatcher.off(Event.SCENE_LOADED, this.sceneLoadedMsg, this);\r\n        cc.game.removePersistRootNode(this.node);\r\n        SceneManager.instance = null;\r\n    },\r\n\r\n    getCurSceneParams: function () {\r\n        return this._sceneParams;\r\n    },\r\n\r\n    getCurDialogParams: function () {\r\n        return this._dialogParams;\r\n    },\r\n\r\n    getCurSceneName: function () {\r\n        return this._curSceneName;\r\n    },\r\n    // 是否正在切换场景\r\n    isSwitchingScene: function () {\r\n        return this._switchingSceneFlags.switching;\r\n    },\r\n\r\n    switchScene: function (sceneName, params, onLoad) {\r\n        var flags = this._switchingSceneFlags;\r\n        if (flags.switching) {\r\n            cc.warn('alreay switching to scene [' + flags.targetSceneName + ']');\r\n            if (flags.targetSceneName === sceneName) return;\r\n        }\r\n        var curScene = cc.director.getScene();\r\n        if (this._curSceneName === sceneName) return;\r\n        this._sceneParams = params; // 传递到下一个场景的参数\r\n        this._switchSceneCB = onLoad;\r\n\r\n        EventDispatcher.emit(Event.BEFORE_SCENE_LAUNCH, sceneName);\r\n        flags.targetSceneName = sceneName;\r\n        flags.switching = true;\r\n        if (this._enableSwitchSceneAnim)\r\n            this._switchSceneAnimIn();\r\n        var self = this;\r\n        cc.director.preloadScene(sceneName, function () {\r\n            if (!flags.targetSceneName || flags.targetSceneName != sceneName) {\r\n                return;\r\n            }\r\n            flags.sceneLoaded = true;\r\n            if (!self._enableSwitchSceneAnim || flags.inAnimationDone)\r\n                self._loadScene();\r\n        });\r\n    },\r\n\r\n    _loadScene: function () {\r\n        var flags = this._switchingSceneFlags;\r\n        cc.director.loadScene(flags.targetSceneName, function () {\r\n            this._curSceneName = flags.targetSceneName;\r\n\r\n            EventDispatcher.emit(Event.AFTER_SCENE_LAUNCH, flags.targetSceneName);\r\n            if (this._switchSceneCB) {\r\n                this._switchSceneCB();\r\n                this._switchSceneCB = undefined;\r\n            }\r\n            this._clearDialogCacheAndStack();\r\n        }.bind(this));\r\n    },\r\n    sceneLoadedMsg: function () {\r\n        // console.log('监听到场景加载完成 = ', this._enableSwitchSceneAnim)\r\n        var flags = this._switchingSceneFlags;\r\n        flags.targetSceneName = null;\r\n        flags.sceneLoaded = false;\r\n        flags.inAnimationDone = false;\r\n        flags.switching = false;\r\n        if (this._enableSwitchSceneAnim)\r\n            this._switchSceneAnimOut();\r\n    },\r\n    // 添加切换场景动画\r\n    addSwitchSceneAinm: function (name, prefabPath) {\r\n        var self = this;\r\n        cc.loader.loadRes(prefabPath, function (err, prefab) {\r\n            if (err) {\r\n                cc.error(\"can not load switch scene animation -> [\" + prefabPath + \"], error:\", err);\r\n                return;\r\n            }\r\n            var node = cc.instantiate(prefab);\r\n            node.name = name;\r\n            var animNode = self.node.getChildByName(\"SwitchSceneAnimation\");\r\n            if (!animNode) {\r\n                animNode = new cc.Node(\"SwitchSceneAnimation\");\r\n                animNode.zIndex = Const.ANIM_Z_ORDER;\r\n                self.node.addChild(animNode);\r\n            }\r\n            var tn = animNode.getChildByName(name);\r\n            if (tn) {\r\n                tn.removeFromParent(true);\r\n            }\r\n            animNode.addChild(node);\r\n            node.active = false;\r\n        });\r\n    },\r\n\r\n    // 场景切换动画B\r\n    _switchSceneAnimOut: function () {\r\n        // console.log('结束动画')\r\n        var anim = this._getSwitchAnimComponent();\r\n        anim && anim.playOutAnim();\r\n    },\r\n    // 切换动画A\r\n    _switchSceneAnimIn: function () {\r\n        // console.log('开始动画')\r\n        var flags = this._switchingSceneFlags;\r\n        var anim = this._getSwitchAnimComponent();\r\n        if (anim) { // 播放切换动画\r\n            anim.node.active = true;\r\n            anim.playInAnim(function () {\r\n                flags.inAnimationDone = true;\r\n                flags.sceneLoaded && this._loadScene();\r\n            }.bind(this));\r\n        } else {\r\n            flags.inAnimationDone = true;\r\n            flags.sceneLoaded && this._loadScene();\r\n        }\r\n    },\r\n    _getSwitchAnimComponent: function (name) {\r\n        var animNode = this.node.getChildByName(\"SwitchSceneAnimation\");\r\n        if (!animNode) return null;\r\n        animNode = animNode.getChildByName(name ? name : 'default');\r\n        if (!animNode) return null;\r\n        // var comp = animNode.getComponent(\"AFSwitchSceneAnim\");\r\n        var comp = animNode.getComponent(\"AFLoadingAnim\");\r\n        return comp;\r\n    },\r\n\r\n    // 注册已经挂在场景上的dialog\r\n    // 说明：可以将一些跟当前场景高度相关的对话框\r\n    // 直接挂在场景上，这样可以避免重复实例化\r\n    registerDialog: function (dialogName, node) {\r\n        this._sceneDialog[dialogName] = node;\r\n    },\r\n    // 注意：dialog节点被销毁时必须unregister\r\n    unregisterDialog: function (dialogName) {\r\n        delete this._sceneDialog[dialogName];\r\n        var i = 0;\r\n        while (i < this._dialogStack.length) {\r\n            var v = this._dialogStack[i];\r\n            if (v.name === dialogName) {\r\n                this._dialogStack.splice(i, 1);\r\n            } else {\r\n                i++;\r\n            }\r\n        }\r\n    },\r\n\r\n    // 切场景后，会把Dialog Cache 和 Stack 清掉\r\n    _clearDialogCacheAndStack: function () {\r\n        this._dialogCache = {};\r\n        this._dialogStack = [];\r\n        this._tryToOpenDialog = undefined;\r\n    },\r\n\r\n    _loadDialog: function (dialogName, onLoad, active) {\r\n        if (!this._dialogPaths) {\r\n            var d = Config.getDialogList();\r\n            this._dialogPaths = d.dialogs;\r\n            if (!this._dialogPaths) {\r\n                onLoad && onLoad(true);\r\n                return;\r\n            };\r\n        }\r\n\r\n        var dialogPath = this._dialogPaths[dialogName];\r\n        if (!dialogPath) {\r\n            cc.error(\"can not load dialog -> [\" + dialogName + \"], not found in dialog list.\");\r\n            onLoad && onLoad(true);\r\n            return;\r\n        }\r\n        cc.loader.loadRes(dialogPath, function (err, prefab) {\r\n            if (err) {\r\n                cc.error(\"can not load dialog -> [\" + dialogName + \"], error:\", err);\r\n                onLoad && onLoad(true);\r\n                return;\r\n            }\r\n            var node = cc.instantiate(prefab);\r\n            if (active !== undefined) {\r\n                node.active = active;\r\n            }\r\n            node.setPosition(cc.winSize.width / 2, cc.winSize.height / 2);\r\n            cc.director.getScene().addChild(node);\r\n            node.zIndex = Const.DIALOG_Z_ORDER;\r\n            node.name = dialogName;\r\n            onLoad && onLoad(null, node);\r\n        });\r\n    },\r\n\r\n    preloadDialog: function (dialogName, onLoad) {\r\n        if (this._dialogCache[dialogName]) return;\r\n        this._preloadingDialog[dialogName] = true;\r\n        this._loadDialog(dialogName, function (err, dialogNode) {\r\n            delete this._preloadingDialog[dialogName];\r\n            // 准备打开的对话框\r\n            if (this._tryToOpenDialog && this._tryToOpenDialog.name == dialogName) {\r\n                !err && this._pushDialogToStack(dialogName, dialogNode);\r\n                if (this._tryToOpenDialog.onOpened) {\r\n                    this._tryToOpenDialog.onOpened(err, dialogNode);\r\n                }\r\n                this._tryToOpenDialog = undefined;\r\n            } else {\r\n                if (!err) {\r\n                    dialogNode.active = false;\r\n                    this._dialogCache[dialogName] = { name: dialogName, node: dialogNode };\r\n                }\r\n            }\r\n            onLoad && onLoad(err);\r\n        }.bind(this), false);\r\n    },\r\n\r\n    openDialog: function (dialogName, params, onOpened) {\r\n        if (!dialogName || dialogName == \"\") {\r\n            cc.error(\"can not open dialog -> [\" + dialogName + \"]\");\r\n            onOpened && onOpened(true);\r\n            return;\r\n        }\r\n        this._dialogParams = params;\r\n        // 是否是场景对话框\r\n        if (this._sceneDialog[dialogName]) {\r\n            if (this._hasDialogInStack(dialogName)) {\r\n                cc.error(\"scene dialog can not open twice, use prefab dialog or close the dialogs above the scence dialog\");\r\n                onOpened && onOpened(true);\r\n                return;\r\n            }\r\n            var node = this._sceneDialog[dialogName];\r\n            node.zIndex = Const.DIALOG_Z_ORDER;\r\n            node.active = true;\r\n            this._pushDialogToStack(dialogName, node);\r\n            if (onOpened) onOpened(false, node);\r\n            return;\r\n        }\r\n\r\n        // 是否在缓存中\r\n        if (this._dialogCache[dialogName]) {\r\n            var dialog = this._dialogCache[dialogName];\r\n            delete this._dialogCache[dialogName];\r\n            dialog.node.setPosition(cc.winSize.width / 2, cc.winSize.height / 2);\r\n            dialog.node.zIndex = Const.DIALOG_Z_ORDER;\r\n            dialog.node.active = true;\r\n            this._pushDialogToStack(dialogName, dialog.node);\r\n            onOpened && onOpened(false, dialog.node);\r\n            return;\r\n        }\r\n\r\n        // 是否已经在加载了\r\n        if (this._preloadingDialog[dialogName]) {\r\n            this._tryToOpenDialog = { name: dialogName, onOpened: onOpened };\r\n            return;\r\n        }\r\n\r\n        this._loadDialog(dialogName, function (err, dialogNode) {\r\n            this._pushDialogToStack(dialogName, dialogNode);\r\n            onOpened && onOpened(err, dialogNode);\r\n        }.bind(this));\r\n    },\r\n\r\n    onDialogClosed: function (dialogName, node) {\r\n        var len = this._dialogStack.length;\r\n        var i = len - 1;\r\n        for (i = len - 1; i >= 0; i--) {\r\n            var v = this._dialogStack[i];\r\n            if (v.name === dialogName && v.node === node) {\r\n                this._dialogStack.splice(i, 1);\r\n                if (!this._sceneDialog[dialogName]) {\r\n                    // v.node.destroy();\r\n                    v.node.zIndex = Const.DIALOG_Z_ORDER - 1;\r\n                    v.node.active = false;\r\n                    if (this._dialogCache[dialogName]) {\r\n                        v.node.destroy();\r\n                    } else {\r\n                        this._dialogCache[dialogName] = v;\r\n                    }\r\n                }\r\n                else {\r\n                    v.node.active = false;\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        len = this._dialogStack.length;\r\n        if (len > 0) {\r\n            this._dialogStack[len - 1].node.zIndex = Const.DIALOG_Z_ORDER;\r\n            this._dialogStack[len - 1].node.active = true;\r\n        }\r\n    },\r\n    getCurDialog: function () {\r\n        var len = this._dialogStack.length;\r\n        return len > 0 ? this._dialogStack[len - 1] : undefined;\r\n    },\r\n    _pushDialogToStack: function (dialogName, node) {\r\n        var len = this._dialogStack.length;\r\n        var selfComp = node.getComponent('AFDialogBase');\r\n        if (len > 0 && !selfComp.noHideOtherDialog) {\r\n            var prevDialog = this._dialogStack[len - 1];\r\n            prevDialog.node.zIndex = Const.DIALOG_Z_ORDER - 1;\r\n            var comp = prevDialog.node.getComponent('AFDialogBase');\r\n            // 把前一个dialog\r\n            if ((!comp || !comp.noHideBelowDialog) && !comp.isClosing()) {\r\n                prevDialog.node.active = false;\r\n            }\r\n        }\r\n        this._dialogStack.push({ name: dialogName, node: node });\r\n    },\r\n    _hasDialogInStack: function (dialogName) {\r\n        var len = this._dialogStack.length;\r\n        for (var i = 0; i < len; ++i) {\r\n            var v = this._dialogStack[i];\r\n            if (v.name === dialogName) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    },\r\n});\r\n\r\n// 设置取切场景和对话框的全局变量\r\nwindow.AF.SCENE_PARAMS = function () {\r\n    if (!SceneManager.instance) return null;\r\n    return SceneManager.instance.getCurSceneParams();\r\n};\r\n\r\nwindow.AF.DIALOG_PARAMS = function () {\r\n    if (!SceneManager.instance) return {};\r\n    return SceneManager.instance.getCurDialogParams();\r\n};\r\n\r\n// 跳转场景\r\nwindow.AF.gotoScene = function (sceneName, params, onLoad) {\r\n    if (!SceneManager.instance) return null;\r\n    SceneManager.instance.switchScene(sceneName, params, onLoad);\r\n};\r\n\r\nwindow.AF.setEnableSwitchSceneAnim = function (state) {\r\n    if (!SceneManager.instance) return null;\r\n    SceneManager.instance.setEnableSwitchSceneAnim(state);\r\n};\r\n\r\n// 打开对话框\r\nwindow.AF.openDialog = function (dialogName, params, onOpened) {\r\n    if (!SceneManager.instance) return null;\r\n\r\n    var argv = { dialogName: dialogName, params: params, onOpened: onOpened };\r\n    window.AF.EventDispatcher.emit(window.AF.Event.WILL_OPEN_DIALOG, argv);\r\n\r\n    if (argv.dialogName) {\r\n        cc.log('OpenDialog->', argv.dialogName);\r\n        SceneManager.instance.openDialog(argv.dialogName, argv.params, argv.onOpened);\r\n    }\r\n};\r\n\r\n// 预加载对话框\r\nwindow.AF.preloadDialog = function (dialogName, onLoad) {\r\n    if (!SceneManager.instance) return null;\r\n    SceneManager.instance.preloadDialog(dialogName, onLoad);\r\n};\r\n\r\n/*\r\n// 首次启动场景，初始化SceneManager\r\ncc.director.once(cc.Director.EVENT_AFTER_SCENE_LAUNCH, function () {\r\n    // 添加SceneManager节点\r\n    var s = cc.director.getScene();\r\n    if (CC_EDITOR || s.getChildByName('SceneManager')) return;\r\n    var node = new cc.Node('SceneManager');\r\n    node.addComponent(SceneManager);\r\n    s.addChild(node);\r\n});\r\n*/\r\n\r\n// 游戏切换到后台\r\ncc.game.on(cc.game.EVENT_HIDE, function () {\r\n    //cc.info('[AF] game on hide');\r\n    console.log(\"游戏切换到后台\");\r\n    EventDispatcher.emit(Event.GMAE_ON_HIDE);\r\n});\r\n\r\n// 游戏切换到前台\r\ncc.game.on(cc.game.EVENT_SHOW, function () {\r\n    console.log(\"游戏切换到前台\");\r\n    //cc.info('[AF] game on show');\r\n    EventDispatcher.emit(Event.GAME_ON_SHOW);\r\n});\r\n"]}