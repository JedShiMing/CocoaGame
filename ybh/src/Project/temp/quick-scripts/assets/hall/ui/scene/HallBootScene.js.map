{"version":3,"sources":["HallBootScene.js"],"names":["Config","require","cc","Class","extends","Component","properties","onLoad","console","log","onEnable","start","loadSubPackage","loadDialogList","SceneManager","s","director","getScene","CC_EDITOR","getChildByName","node","Node","addComponent","addChild","AF","gotoScene","error","Promise","resolve","reject","loader","downloader","loadSubpackage","err","update"],"mappings":";;;;;;;;AACA,IAAIA,SAASC,QAAQ,eAAR,CAAb;;AAEAC,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY,EAHP;;AAML;AACAC,UAPK,oBAOI;AACLC,gBAAQC,GAAR,CAAY,sBAAZ;AACH,KATI;AAWLC,YAXK,sBAWM;AACPF,gBAAQC,GAAR,CAAY,wBAAZ;AACA;AACA;;AAEA;;;;;;;AASH,KAzBI;AA0BCE,SA1BD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA2BDH,oCAAQC,GAAR,CAAY,qBAAZ;AA3BC;AAAA;AAAA,mCA6BS,KAAKG,cAAL,EA7BT;;AAAA;AAAA;AAAA,mCA8BSZ,OAAOa,cAAP,EA9BT;;AAAA;AA+BOC,wCA/BP,GA+BsBb,QAAQ,cAAR,CA/BtB;;AAiCG;;AACIc,6BAlCP,GAkCWb,GAAGc,QAAH,CAAYC,QAAZ,EAlCX;;AAAA,kCAmCOC,aAAaH,EAAEI,cAAF,CAAiB,cAAjB,CAnCpB;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAoCOC,gCApCP,GAoCc,IAAIlB,GAAGmB,IAAP,CAAY,cAAZ,CApCd;;AAqCGD,iCAAKE,YAAL,CAAkBR,YAAlB;AACAC,8BAAEQ,QAAF,CAAWH,IAAX;AACAI,+BAAGC,SAAH,CAAa,gBAAb;AAvCH;AAAA;;AAAA;AAAA;AAAA;;AAyCGjB,oCAAQkB,KAAR,CAAc,UAAd;AAzCH;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAsDLd,kBAtDK,4BAsDW;AACZ,eAAO,IAAIe,OAAJ,CAAY,UAACC,OAAD,EAASC,MAAT,EAAkB;AACjC3B,eAAG4B,MAAH,CAAUC,UAAV,CAAqBC,cAArB,CAAoC,KAApC,EAA2C,UAAUC,GAAV,EAAe;AACtD,oBAAIA,GAAJ,EAAS;AACLL;AACH;AACDA;AACH,aALD;AAMH,SAPM,CAAP;AAQH,KA/DI;AAiELM,UAjEK,oBAiEI;AACL;;;;;;;;AAUH;AA5EI,CAAT","file":"HallBootScene.js","sourceRoot":"../../../../../../assets/hall/ui/scene","sourcesContent":["\r\nvar Config = require(\"af-config-mgr\");\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n    },\r\n\r\n    // use this for initialization\r\n    onLoad() {\r\n        console.log(\"HallBootScene onLoad\");\r\n    },\r\n\r\n    onEnable() {\r\n        console.log(\"HallBootScene onEnable\");\r\n        //console.log(\"SceneMgr\", SceneManager);\r\n        // 添加SceneManager节点\r\n\r\n        /*\r\n        var s = cc.director.getScene();\r\n        var node = new cc.Node('SceneManager');\r\n        node.addComponent(SceneManager);\r\n        s.addChild(node);\r\n\r\n        AF.gotoScene(\"HallLoginScene\");\r\n        */\r\n\r\n    },\r\n    async start() {\r\n        console.log(\"HallBootScene start\");\r\n        try {\r\n            await this.loadSubPackage();\r\n            await Config.loadDialogList();\r\n            var SceneManager = require('af-scene-mgr');\r\n\r\n            // 添加SceneManager节点\r\n            var s = cc.director.getScene();\r\n            if (CC_EDITOR || s.getChildByName('SceneManager')) return;\r\n            var node = new cc.Node('SceneManager');\r\n            node.addComponent(SceneManager);\r\n            s.addChild(node);\r\n            AF.gotoScene(\"HallLoginScene\");\r\n        } catch (error) {\r\n            console.error('【游戏出现错误】');\r\n            return;\r\n        }/**/\r\n        // for (const key in cc.Sprite.State) {\r\n        //     console.log(key);\r\n        //     //     if (key && key[0] && (key[0] === 'g' || key[0] === 'G')) {\r\n        //     // }\r\n        // }\r\n\r\n        // AF.ShaderUtils.init(\"gray\");\r\n        // AF.gotoScene(\"HallLoginScene\");\r\n\r\n    },\r\n    loadSubPackage(){\r\n        return new Promise((resolve,reject)=>{\r\n            cc.loader.downloader.loadSubpackage('sub', function (err) {\r\n                if (err) {\r\n                    resolve();\r\n                }\r\n                resolve();\r\n            });\r\n        })\r\n    },\r\n\r\n    update() {\r\n        /*\r\n\r\n        var dialogList = AF.Config.getDialogList();\r\n\r\n        if (!dialogList) {\r\n            //console.log(\"loading dialog list\");\r\n        } else {\r\n            //console.log(dialogList);\r\n        }\r\n        */\r\n    },\r\n});\r\n"]}