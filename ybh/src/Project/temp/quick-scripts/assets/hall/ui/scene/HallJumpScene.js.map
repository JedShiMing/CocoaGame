{"version":3,"sources":["HallJumpScene.js"],"names":["CLOUD_INTERVAL","MIN_OPACITY","MAX_OPACITY","BASE_CLOUD_HEIGHT","STONE_INTERVAL","DRAG","GRAVITY","VELOCITY","stone_velocity_config","low","width","baseDt","minSpeed","maxSpeed","middle","height","SPEED_DIFF","CREATE_DEALY_TIME","MAX_STONE_SPEED","STONE_RANGE","NORMAL_INTERVAL","GROUND_HEIGHT","MAX_PREFECT","PREFECT_OFFSET","debug","jumpActionName","BASE_SCORE","CLOUD_ACTION_TAG","GAME_STATUS","CONTINUE","OVER","DROP","BALANCE","PAUSE","PLAYER_STATUS","GROUND","SKY","DOUBLE","cc","Class","extends","Component","properties","uiNode","Node","gameNode","cloudNode","bgNode","rocketBg","goldNode","perfectFont","BitmapFont","normalFont","playerPre","Prefab","effectPre","stonePre","titleSpriteFrames","default","type","SpriteFrame","scoreNode","sharerOpenId","Label","sharerNickName","score","photo","reviveButton","onLoad","playerData","AF","GameData","getMyPlayerData","step","origin","v2","winSize","setPosition","logoNode","getChildByName","touchNode","node","on","EventType","TOUCH_START","onTouchStart","offsetPos","initUINode","initGameNode","initCloudNode","initBGNode","initGameStart","showDustEffect","showLineEffect","gameStatus","playerStatus","goldPool","EventDispatcher","Event","JUMP_REVIVE","onBalanceDialogEvent","photoScript","getComponent","schedule","onGameBGM","onDestroy","off","util","hideBannerAd","status","active","gameStart","showBalance","playerButton","scale","hero","instantiate","setScale","addChild","buttonHeroScript","rankButton","startButton","gameCountNode","overNode","childs","i","length","childNode","startNode","tipsNode","createNewStone","stoneNode","stoneScript","setStoneType","setNewColor","setStoneRect","totalHeight","playerNode","zIndex","jumpHero","heroScript","backupHero","backupHeroInfo","script","playerId","GameConfig","getRandomPlayerId","setPlayerID","stonePool","stoneNum","Math","ceil","stoneObj","push","groundStone","lineMgr","lines","name","line","cloudMgr","cloudNum","nodeName","cloudSp","addComponent","Sprite","trim","sizeMode","cloudObj","sprite","cloudId","refreshCloudUI","baseHeight","random","x","y","opacity","loader","loadRes","err","spriteFrame","console","warn","minX","addCloudMoveEffect","bgMgr","gameStartTime","Date","now","tips","title","addIcon","scoreNum","heroVerticalVelocity","heroHorizontalVelocity","heroRotationVelocity","newBackupHeroScript","newBackupPlayerId","playAction","setHeroShadow","setAnchorPoint","rotation","playDefaultPoise","perfectCount","totalScore","totalScoreNode","totalScoreNum","getComponentInChildren","font","refreshCountLabel","stoneList","perfectStoneList","bestLimt","bestScore","bestLine","averLimt","playCount","aveLine","preLimt","preScore","lastLine","currLimt","normalLine","onDisable","start","emit","SCENE_LOADED","updateHeroPosition","dt","keep","max","min","heroHorizontalVelocit","abs","velocity","setFlipX","updateStonePosition","delayTime","acceleration","rectIntersectsRect","rectA","rectB","rectAMinX","rectGetMinX","rectAMaxX","rectGetMaxX","rectAMinY","rectGetMinY","rectAMaxY","rectGetMaxY","rectBMinX","rectBMaxX","rectBMinY","rectBMaxY","newMinX","newMaxX","newMinY","newMaxY","rect","checkIntersects","stoneRect","playerRect","newRect","dx","dy","result","updateIntersects","playerTrueY","resultStone","getStoneRect","Object","assign","groundRect","resultGround","updateGameNextDt","audio","play","doJump","stopAction","refreshHeroStatus","tipType","tipNum","audioName","offsetX","pow","shift","oldGroundStone","newGroundStone","showTips","showScoreFadeAction","showScore","lastStone","newList","getNexStoneList","concat","getFlipX","updateGameNodePosition","refreshCloudMgr","refreshStonePool","refreshBGNode","updateLine","message","posY","currScore","normalLimt","floor","showOverMessage","worldPos","convertToWorldSpaceAR","localPos","convertToNodeSpaceAR","stopAllActions","string","runAction","sequence","scaleTo","easing","easeBackOut","easeBackIn","lowCloud","pos","heightCloud","newHeightCloud","stone","maxY","lowBgNode","lowPos","update","gameModle","updateRocket","updateNormal","currY","params","modle","data","startTime","isVideoAdLoaded","reviveEnable","openDialog","getBoundingBox","updateRocketBg","updateRocketStonePosition","catchHeroPosition","checkStone","event","onPlayerButtonClick","custom","onRankButtonClick","gotoScene","onReviveButtonClick","resumeBGM","onGameStart","self","actions","time1","time2","hideStartButton","callFunc","moveTo","easeSineIn","speed","moveBy","playDefaultBGM","doStartGame","doRocketRush","onStartButtonClick","isLoaded","ToastMessage","show","openRocketDialog","Promise","resolve","reject","callBack","then","minLength","maxLength","direction","startX","startY","baseDelayTime","baseAcceleration","preVelocity","preAcceleration","num","getStone","init","setMyPlayerData","savePlayerData","showRevive","index","addGoodFlyEffect","addShakerEffect","showLight","showGoodJobMessage","effectNames","effectName","showTipsEffect","getGoldObj","goldObj","workStatus","flipX","dustEffect","dustEffectNode","doStart","lineEffect","tipsEffect","tipsEffectNode","intervalSwitchBg","center","bg1","scaleY","bg2","newStone","getRocketStone","preMoveTime","getMoveTime","moveTime","heroPos","gamePos","distance","sqrt","doMoveXXXX","ghostList","time","tpos","directionX","directionY","showGold","p","moveAction","hideGold","gold","tPos","scheduler","target","interval","init_x","getPositionX","init_y","getPositionY","totalTime","actionName","currModle","moveTime1","parent","convertToNodeSpace","fadeOut","cb","unschedule","moveActionInfo","speed_min","speed_max","currSpeed","currWorldPos","endCallBack","shaker","diff_x","diff_y","diff_max","showSharerInfo","shareInfo","getShareInfo","challenge","JSON","parse","getAvatarUrl","openId","avatarUrl","setBigPhoto","GAME_ON_BGM"],"mappings":"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","file":"HallJumpScene.js","sourceRoot":"../../../../../../assets/hall/ui/scene","sourcesContent":["//两块云之间的间隔最大值 像素\r\nconst CLOUD_INTERVAL = 100;\r\n//云的最大透明度与最小透明度\r\nconst MIN_OPACITY = 255 * 0.8;\r\nconst MAX_OPACITY = 255 * 0.98;\r\n//云起始高度\r\nconst BASE_CLOUD_HEIGHT = 1500;\r\n//石头高度【实际图片大小高度相同】 像素\r\nconst STONE_INTERVAL = 80;\r\n//英雄水平方向阻力 像素/s\r\nconst DRAG = 1000;\r\n//重力 1500像素/s\r\nconst GRAVITY = 2000;\r\n//跳跃初速度 550像素/s\r\nconst VELOCITY = 750;\r\n\r\n// perfectCount\r\n//石头的配置\r\n/*{\r\n    low: {//0 <= 当前高度 < 20 * STONE_INTERVAL\r\n        width: ,//石头宽度【实际图片大小宽度相同】 像素\r\n        baseDt:, //基础时间间隔 石头中心到达中心点的最小间隔 s\r\n        minSpeed: ,//随机最小速度 像素/s\r\n        maxSpeed: ,//随机最大速度 像素/s\r\n    },\r\n    middle: {//20 * STONE_INTERVAL <= 当前高度 < 50 * STONE_INTERVAL\r\n        ...\r\n    },\r\n    height: {//50 * STONE_INTERVAL <= 当前高度\r\n        ...\r\n    },\r\n}*/\r\nvar stone_velocity_config = {\r\n    low: {\r\n        width: 200,\r\n        baseDt: 0.9,\r\n        minSpeed: 300,\r\n        maxSpeed: 380,\r\n    },\r\n    middle: {\r\n        width: 200,\r\n        baseDt: 0.6,\r\n        minSpeed: 280,\r\n        maxSpeed: 400,\r\n    },\r\n    height: {\r\n        width: 200,\r\n        baseDt: 0.6,\r\n        minSpeed: 280,\r\n        maxSpeed: 400,\r\n    },\r\n};\r\n//砖块之间最小速度差\r\nvar SPEED_DIFF = 10;\r\n//生成砖块间隔\r\nvar CREATE_DEALY_TIME = 1.5;\r\n//石头最大速度 像素/s\r\nvar MAX_STONE_SPEED = 700;\r\n//石头范围 \r\nvar STONE_RANGE = [2, 5];\r\n//超越分数线间隔 NORMAL_INTERVAL*10\r\nconst NORMAL_INTERVAL = 500;\r\n//地面高度 像素\r\nconst GROUND_HEIGHT = 425;\r\n//最大完美幂乘\r\nconst MAX_PREFECT = 5;\r\n//砖块中心点完美偏差\r\nconst PREFECT_OFFSET = 0;\r\n/*以上是配置项 以下不允许修改*/\r\n\r\nvar debug = false;\r\n\r\nconst jumpActionName = 'attack';\r\n\r\nconst BASE_SCORE = 1;\r\n\r\nconst CLOUD_ACTION_TAG = 10005;\r\n\r\nconst GAME_STATUS = {\r\n    CONTINUE: 'CONTINUE',\r\n    OVER: 'OVER',\r\n    DROP: 'DROP',\r\n    BALANCE: 'BALANCE',\r\n    PAUSE: 'PAUSE',\r\n};\r\n\r\nconst PLAYER_STATUS = {\r\n    GROUND: 'GROUND',\r\n    SKY: 'SKY',\r\n    DOUBLE: 'DOUBLE'\r\n};\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n         uiNode: cc.Node,\r\n        gameNode: cc.Node,\r\n        cloudNode: cc.Node,\r\n        bgNode: cc.Node,\r\n        rocketBg: cc.Node,\r\n\r\n        goldNode: cc.Node,\r\n\r\n        perfectFont: cc.BitmapFont,\r\n        normalFont: cc.BitmapFont,\r\n\r\n        playerPre: cc.Prefab,\r\n        effectPre: cc.Prefab,\r\n        stonePre: cc.Prefab,\r\n        titleSpriteFrames: {\r\n            default: [],\r\n            type: cc.SpriteFrame,\r\n        },\r\n\r\n        scoreNode: cc.Node,\r\n\r\n        sharerOpenId: cc.Label,\r\n        sharerNickName: cc.Label,\r\n        score: cc.Label,\r\n        photo: cc.Node,\r\n\r\n        reviveButton: cc.Node,\r\n    },\r\n\r\n    onLoad: function () {\r\n        this.playerData = AF.GameData.getMyPlayerData();\r\n\r\n        this.step = 0;\r\n\r\n        var origin = cc.v2(0 - cc.winSize.width / 2, 0 - cc.winSize.height / 2);\r\n\r\n        this.uiNode.setPosition(origin);\r\n        // var uiBg = this.uiNode.getChildByName('bg');\r\n        // uiBg.setPosition(cc.p(cc.winSize.width / 2, cc.winSize.height / 2));\r\n        // uiBg.width = cc.winSize.width;\r\n        // uiBg.height = cc.winSize.height;\r\n        var logoNode = this.uiNode.getChildByName('logoNode');\r\n        logoNode.setPosition(cc.v2(cc.winSize.width / 2, cc.winSize.height / 2));\r\n\r\n        var touchNode = this.node.getChildByName('touchNode');\r\n        touchNode.width = cc.winSize.width;\r\n        touchNode.height = cc.winSize.height;\r\n        touchNode.setPosition(origin);\r\n        touchNode.on(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);\r\n\r\n        var offsetPos = cc.v2(0 - cc.winSize.width / 2, 0 - cc.winSize.height / 2 - cc.winSize.height * 1.5);\r\n        this.gameNode.setPosition(offsetPos);\r\n\r\n        this.cloudNode.setPosition(offsetPos);\r\n\r\n        this.bgNode.setPosition(offsetPos);\r\n\r\n        // this.playerId = AF.GameConfig.getRandomPlayerId();\r\n        // this.playerId = 1101;\r\n        this.initUINode(this.uiNode);\r\n        this.initGameNode(this.gameNode);\r\n        this.initCloudNode(this.cloudNode);\r\n        this.initBGNode(this.bgNode);\r\n\r\n        this.initGameStart();\r\n\r\n        this.showDustEffect(0, 0 - cc.winSize.height);\r\n        this.showLineEffect(0 - cc.winSize.height);\r\n\r\n\r\n        this.gameStatus = GAME_STATUS.OVER;\r\n        this.playerStatus = PLAYER_STATUS.SKY;\r\n\r\n        this.goldPool = [];\r\n        AF.EventDispatcher.on(AF.Event.JUMP_REVIVE, this.onBalanceDialogEvent, this);\r\n\r\n        //AF.util.showBannerAd(\"main\");\r\n\r\n        this.photoScript = this.photo.getComponent(\"PhotoPrefab\");\r\n\r\n        this.schedule(this.onGameBGM, 0.1, this);\r\n\r\n    },\r\n\r\n    onDestroy: function () {\r\n        AF.EventDispatcher.off(AF.Event.JUMP_REVIVE, this.onBalanceDialogEvent, this);\r\n\r\n        AF.util.hideBannerAd(\"main\");\r\n        \r\n    },\r\n\r\n    onBalanceDialogEvent: function (status) {\r\n        if (status === 0) {\r\n            this.reviveButton.active = true\r\n            // this.showRevive();\r\n            this.scoreNode.active = true\r\n        }else if (status === 1) {\r\n            this.scoreNode.active = false\r\n            this.gameStart = false;\r\n            this.showBalance();\r\n        }else if (status === 2) {\r\n            this.scoreNode.active = false\r\n            this.gameStatus = GAME_STATUS.BALANCE;\r\n        }\r\n    },\r\n\r\n    initUINode: function (node) {\r\n        var node = this.uiNode;\r\n        // var logo = node.getChildByName('logo');\r\n        // logo.setPosition(cc.winSize.width / 2, cc.winSize.height * 0.618);\r\n\r\n        var playerButton = node.getChildByName('playerButton');\r\n        var scale = 1.3;\r\n\r\n        var hero = cc.instantiate(this.playerPre);\r\n        hero.setPosition(5, -28);\r\n        hero.setScale(scale);\r\n        playerButton.getChildByName('button').addChild(hero);\r\n        this.buttonHeroScript = hero.getComponent(\"PlayerPrefab\");\r\n        // this.buttonHeroScript.setPlayerID(this.playerId);\r\n        // this.buttonHeroScript.playDefaultPoise();\r\n        // this.buttonHeroScript.setHeroShadow(false);\r\n        playerButton.setPosition(100, 0.15 * cc.winSize.height);\r\n\r\n        var rankButton = node.getChildByName('rankButton');\r\n        rankButton.setPosition(540, 0.15 * cc.winSize.height);\r\n\r\n        var startButton = node.getChildByName('startButton');\r\n        startButton.setPosition(320, 0.15 * cc.winSize.height);\r\n\r\n        var gameCountNode = this.uiNode.getChildByName('gameCount');\r\n        gameCountNode.setPosition(0, cc.winSize.height * 0.93);\r\n\r\n        var overNode = this.uiNode.getChildByName('overNode');\r\n        overNode.setPosition(cc.winSize.width / 2, cc.winSize.height * 0.93 - 150);\r\n        var childs = ['overBestScore', 'overAveScore', 'overPreScore', 'overNormal'];\r\n        var node = null;\r\n        for (let i = 0; i < childs.length; i++) {\r\n            let childNode = overNode.getChildByName(childs[i]);\r\n            childNode.scale = 0;\r\n        }\r\n\r\n        var startNode = this.uiNode.getChildByName('startNode');\r\n        startNode.setPosition(cc.winSize.width / 2, cc.winSize.height * 0.6);\r\n        var childs = ['ready', 'cutdown0', 'cutdown1', 'go'];\r\n        var node = null;\r\n        for (let i = 0; i < childs.length; i++) {\r\n            let childNode = startNode.getChildByName(childs[i]);\r\n            childNode.scale = 0;\r\n        }\r\n        \r\n        var tipsNode = this.uiNode.getChildByName('tips');\r\n        tipsNode.setPosition(cc.winSize.width / 2, cc.winSize.height * 0.93 - 250);\r\n\r\n    },\r\n\r\n    createNewStone: function () {\r\n        var stoneNode = cc.instantiate(this.stonePre);\r\n        stoneNode.setPosition(-1000, 0);\r\n        this.gameNode.addChild(stoneNode, -1);\r\n        var stoneScript = stoneNode.getComponent('StonePrefab');\r\n        stoneScript.setStoneType('stone');\r\n        stoneScript.setNewColor(stone_velocity_config.low.width);\r\n        stoneScript.setStoneRect(stone_velocity_config.low.width, STONE_INTERVAL);\r\n        return stoneScript;\r\n    },\r\n\r\n    initGameNode: function () {\r\n\r\n        this.totalHeight = GROUND_HEIGHT;\r\n        var scale = 1.5;\r\n        this.playerNode = this.gameNode.getChildByName('playerNode');\r\n        this.playerNode.zIndex = 9;\r\n        this.playerNode.width = 36 * scale;\r\n        this.playerNode.height = 78 * scale;\r\n        // this.playerNode.setAnchorPoint(0.5, 0);\r\n        this.playerNode.setPosition(cc.winSize.width / 2, GROUND_HEIGHT);\r\n\r\n        var jumpHero = cc.instantiate(this.playerPre);\r\n        jumpHero.setScale(scale);\r\n        jumpHero.setPosition(0, 0);\r\n        this.playerNode.addChild(jumpHero, 1, 'jumpHero');\r\n        this.heroScript = jumpHero.getComponent(\"PlayerPrefab\");\r\n        // this.heroScript.setPlayerID(this.playerId);\r\n        // this.heroScript.setHeroShadow(false);\r\n\r\n        var backupHero = cc.instantiate(this.playerPre);\r\n        backupHero.setScale(scale);\r\n        backupHero.setPosition(0, 0);\r\n        this.playerNode.addChild(backupHero, 1, 'backupHero');\r\n        this.backupHeroInfo = {\r\n            script: backupHero.getComponent(\"PlayerPrefab\"),\r\n            playerId: AF.GameConfig.getRandomPlayerId(),\r\n        };\r\n        this.backupHeroInfo.script.setPlayerID(this.backupHeroInfo.playerId);\r\n        backupHero.active = false;\r\n\r\n        this.stonePool = [];\r\n        var stoneNum = Math.ceil(cc.winSize.height / STONE_INTERVAL);\r\n        for (let i = 0; i < stoneNum; i++) {\r\n            let stoneScript = this.createNewStone();\r\n            let stoneObj = { script: stoneScript, status: false };\r\n            this.stonePool.push(stoneObj);\r\n        }\r\n        this.groundStone = null;\r\n        this.lineMgr = {};\r\n        var lines = ['aveLine', 'lastLine', 'bestLine', 'normalLine'];\r\n        for (let i = 0; i < lines.length; i++) {\r\n            let name = lines[i];\r\n            let line = this.gameNode.getChildByName(name);\r\n            // line.x = cc.winSize.width / 2;\r\n            this.lineMgr[name] = line;\r\n        }\r\n    },\r\n\r\n    initCloudNode: function (node) {\r\n        var node = this.cloudNode;\r\n        this.cloudMgr = [];\r\n        var cloudNum = Math.ceil(1.5 * cc.winSize.height / CLOUD_INTERVAL);\r\n        for (let i = 0; i < cloudNum; i++) {\r\n            let nodeName = 'cloudNode' + (1 + i);\r\n            let cloudNode = new cc.Node(nodeName);\r\n            let cloudSp = cloudNode.addComponent(cc.Sprite);\r\n            cloudSp.trim = false;\r\n            cloudSp.sizeMode = 2;\r\n            node.addChild(cloudNode, 9, nodeName);\r\n\r\n            let cloudObj = { sprite: cloudSp, cloudId: i };\r\n            this.refreshCloudUI(cloudObj);\r\n            this.cloudMgr[i] = cloudObj;\r\n        }\r\n    },\r\n\r\n    refreshCloudUI: function (cloudObj) {\r\n        if (!cloudObj || !cloudObj.sprite) {\r\n            return;\r\n        }\r\n\r\n        var cloudSp = cloudObj.sprite;\r\n        var node = cloudObj.sprite.node;\r\n        var baseHeight = BASE_CLOUD_HEIGHT + cloudObj.cloudId * CLOUD_INTERVAL;\r\n\r\n        var name = 'yun' + (1 + Math.ceil(Math.random() * 100) % 4);\r\n        var x = (Math.ceil(Math.random() * 10) % 2) * 2 * cc.winSize.width / 3 + Math.random() * cc.winSize.width / 3;\r\n        var y = baseHeight + Math.random() * CLOUD_INTERVAL;\r\n\r\n\r\n        node.opacity = MIN_OPACITY + Math.ceil(Math.random() * (MAX_OPACITY - MIN_OPACITY));\r\n\r\n        cc.loader.loadRes('hall/textures/cloud/' + name, cc.SpriteFrame, (err, spriteFrame) => {\r\n\r\n            if (err) {\r\n                console.warn('url: hall/textures/cloud/' + name + ' load fail');\r\n                return;\r\n            }\r\n            if (cloudSp) {\r\n                cloudSp.spriteFrame = spriteFrame;\r\n                cloudSp.node.zIndex = -1 * Math.ceil(y / CLOUD_INTERVAL);\r\n            } else {\r\n                console.warn('Cloud sprite frame setting error!');\r\n            }\r\n        });\r\n        let minX = 0 - cc.winSize.width / 2;\r\n        // let maxX = cc.winSize.width - node.width;\r\n        node.setPosition(x, y);\r\n        // node.setPosition(minX, y);\r\n\r\n        this.addCloudMoveEffect(node);\r\n        if (node.active) {\r\n            // node.stopActionByTag(CLOUD_ACTION_TAG);\r\n            // // var dxAndDts = [];\r\n            // // for (let i = 1; i <= 4; i++) {\r\n            // //     let dx = i * 10 + cc.random0To1() * 20;\r\n            // //     let dt1 = i * 1 + cc.random0To1() * 1;\r\n            // //     let dt2 = i * 1 + cc.random0To1() * 1;\r\n            // //     dxAndDts.push({ dx: dx, dt: dt1 });\r\n            // //     dxAndDts.push({ dx: 0 - dx, dt: dt2 });\r\n            // // }\r\n            // var actions = [];\r\n            // (maxX - minX) / (minSpeed + Math.random() * (maxSpeed - minSpeed));\r\n            // actions.push(\r\n            //     cc.moveTo(, maxX, y)\r\n            // )\r\n            // actions.push(\r\n            //     cc.callFunc(function () {\r\n            //         node.setPosition(minX, y);\r\n            //     })\r\n            // );\r\n            // // actions.push(cc.moveTo(actionInfo[0].dt, actionInfo[0].dx, 0));\r\n            // // while (true) {\r\n            // //     if (!dxAndDts.length) { break; }\r\n            // //     var index = Math.floor(Math.random() * dxAndDts.length);\r\n            // //     var actionInfo = dxAndDts.splice(index, 1);\r\n            // //     actions.push(cc.moveBy(actionInfo[0].dt, actionInfo[0].dx, 0));\r\n            // // }\r\n            // var action = cc.repeatForever(cc.sequence(actions));\r\n            // action.setTag(CLOUD_ACTION_TAG);\r\n            // node.runAction(action);\r\n        }\r\n    },\r\n\r\n    initBGNode: function (node) {\r\n        this.bgMgr = [];\r\n        this.bgMgr.push(node.getChildByName('sky1'));\r\n        this.bgMgr.push(node.getChildByName('sky2'));\r\n        this.bgMgr.push(node.getChildByName('sky3'));\r\n    },\r\n\r\n    initGameStart: function () {\r\n        this.gameStartTime = Date.now()\r\n        var origin = cc.v2(0 - cc.winSize.width / 2, 0 - cc.winSize.height / 2);\r\n\r\n        this.uiNode.setPosition(origin);\r\n        var logoNode = this.uiNode.getChildByName('logoNode');\r\n        logoNode.setPosition(cc.v2(cc.winSize.width / 2, cc.winSize.height / 2));\r\n\r\n        // var offsetPos = cc.p(0 - cc.winSize.width / 2, 0 - cc.winSize.height / 2 - 830);\r\n        var offsetPos = cc.v2(0 - cc.winSize.width / 2, 0 - cc.winSize.height / 2 - cc.winSize.height * 1.5);\r\n        this.gameNode.setPosition(offsetPos);\r\n\r\n        this.cloudNode.setPosition(offsetPos);\r\n\r\n        this.bgNode.setPosition(offsetPos);\r\n\r\n        var tips = this.uiNode.getChildByName('tips');\r\n        var title = tips.getChildByName('title').getComponent(cc.Sprite);\r\n        var addIcon = tips.getChildByName('addIcon').getComponent(cc.Sprite);\r\n        var scoreNum = tips.getChildByName('scoreNum').getComponent(cc.Label);\r\n        title.node.active = false;\r\n        title.node.scale = 0;\r\n        addIcon.node.active = false;\r\n        scoreNum.node.active = false;\r\n        this.scoreNode.active = true\r\n\r\n        for (let i = 0; i < this.stonePool.length; i++) {\r\n            let stoneObj = this.stonePool[i];\r\n            stoneObj.status = false;\r\n            stoneObj.script.node.setPosition(-1000, 0);\r\n            stoneObj.script.node.opacity = 255;\r\n        }\r\n\r\n        for (let i = 0; i < this.cloudMgr.length; i++) {\r\n            let cloudObj = this.cloudMgr[i];\r\n            cloudObj.cloudId = i;\r\n            this.refreshCloudUI(cloudObj);\r\n        }\r\n\r\n        for (let i = 0; i < this.bgMgr.length; i++) {\r\n            let bgNode = this.bgMgr[i];\r\n            bgNode.y = bgNode.height * i;\r\n        }\r\n        this.heroVerticalVelocity = 0;\r\n        this.heroHorizontalVelocity = 0;\r\n        this.heroRotationVelocity = 0;\r\n\r\n        var newBackupHeroScript = this.heroScript;\r\n        var newBackupPlayerId = AF.GameConfig.getRandomPlayerId();\r\n        newBackupHeroScript.setPlayerID(newBackupPlayerId);\r\n        newBackupHeroScript.node.active = false;\r\n\r\n        this.playerId = this.backupHeroInfo.playerId;\r\n        this.heroScript = this.backupHeroInfo.script;\r\n        this.heroScript.node.active = true;\r\n        this.backupHeroInfo = {\r\n            script: newBackupHeroScript,\r\n            playerId: newBackupPlayerId,\r\n        };\r\n        this.heroScript.playAction('wait');\r\n        this.heroScript.setHeroShadow(false);\r\n\r\n        this.playerNode.zIndex = 9;\r\n        this.playerNode.width = 36;\r\n        this.playerNode.height = 78;\r\n        this.playerNode.setAnchorPoint(0.5, 0);\r\n        this.playerNode.rotation = 0;\r\n        this.playerNode.setPosition(cc.winSize.width / 2, GROUND_HEIGHT);\r\n\r\n        this.buttonHeroScript.setPlayerID(this.playerId);\r\n        this.buttonHeroScript.playDefaultPoise();\r\n        this.buttonHeroScript.setHeroShadow(false);\r\n\r\n        this.groundStone = null;\r\n\r\n        this.perfectCount = 0;\r\n        this.step = 0;\r\n        this.totalScore = 0;\r\n        var gameCountNode = this.uiNode.getChildByName('gameCount');\r\n        var totalScoreNode = gameCountNode.getChildByName('scoreNum');\r\n        var totalScoreNum = totalScoreNode.getComponentInChildren(cc.Label);\r\n        totalScoreNum.font = this.normalFont;\r\n\r\n        this.refreshCountLabel();\r\n        gameCountNode.active = false;\r\n\r\n        this.stoneList = [];\r\n        this.perfectStoneList = [];\r\n\r\n        var bestLimt = this.playerData.bestScore;\r\n        var bestLine = this.lineMgr['bestLine'];\r\n        bestLine.setPosition(cc.winSize.width / 2, GROUND_HEIGHT + STONE_INTERVAL * bestLimt);\r\n        if (bestLimt) {\r\n            bestLine.active = true;\r\n        } else {\r\n            bestLine.active = false;\r\n        }\r\n\r\n        var averLimt = Math.ceil(this.playerData.totalScore / this.playerData.playCount);\r\n        var aveLine = this.lineMgr['aveLine'];\r\n        aveLine.setPosition(cc.winSize.width / 2, GROUND_HEIGHT + STONE_INTERVAL * averLimt);\r\n        if (averLimt && averLimt !== bestLimt) {\r\n            aveLine.active = true;\r\n        } else {\r\n            aveLine.active = false;\r\n        }\r\n        var preLimt = this.playerData.preScore;\r\n        var lastLine = this.lineMgr['lastLine'];\r\n        lastLine.setPosition(cc.winSize.width / 2, GROUND_HEIGHT + STONE_INTERVAL * preLimt);\r\n        if (preLimt && preLimt !== bestLimt && preLimt !== averLimt) {\r\n            lastLine.active = true;\r\n        } else {\r\n            lastLine.active = false;\r\n        }\r\n\r\n        this.currLimt = 1;\r\n\r\n        if (this.currLimt * NORMAL_INTERVAL === preLimt) {\r\n            this.currLimt += 1;\r\n        }\r\n        if (this.currLimt * NORMAL_INTERVAL === averLimt) {\r\n            this.currLimt += 1;\r\n        }\r\n        if (this.currLimt * NORMAL_INTERVAL === bestLimt) {\r\n            this.currLimt += 1;\r\n        }\r\n        var normalLine = this.lineMgr['normalLine'];\r\n        normalLine.setPosition(cc.winSize.width / 2, GROUND_HEIGHT + STONE_INTERVAL * this.currLimt * NORMAL_INTERVAL);\r\n        normalLine.active = true;\r\n\r\n    },\r\n\r\n    onDisable: function () {\r\n        // this.node.active = true;\r\n    },\r\n\r\n    start: function () {\r\n        AF.EventDispatcher.emit(AF.Event.SCENE_LOADED);\r\n        this.heroVerticalVelocity = 0;\r\n        this.heroHorizontalVelocity = 0;\r\n        this.heroRotationVelocity = 0;\r\n        this.gameStart = false;\r\n    },\r\n\r\n    /********** 定时器函数 **********/\r\n\r\n    updateHeroPosition: function (dt, keep) {\r\n        keep = keep || false;\r\n        this.playerNode.y += this.heroVerticalVelocity * dt;\r\n        this.playerNode.x += this.heroHorizontalVelocity * dt;\r\n\r\n        this.playerNode.rotation += this.heroRotationVelocity * dt;\r\n        this.heroVerticalVelocity -= dt * GRAVITY;\r\n        if (this.heroHorizontalVelocity > 0) {\r\n            this.heroHorizontalVelocity = Math.max(0, this.heroHorizontalVelocity - dt * DRAG);\r\n        } else if (this.heroHorizontalVelocity < 0) {\r\n            this.heroHorizontalVelocity = Math.min(0, this.heroHorizontalVelocity + dt * DRAG);\r\n        }\r\n\r\n        if (this.playerNode.y <= GROUND_HEIGHT) {\r\n            this.heroVerticalVelocity = 0;\r\n            // this.heroHorizontalVelocity = 0;\r\n            this.playerNode.y = GROUND_HEIGHT;\r\n        }\r\n        if (0 === this.heroHorizontalVelocit && 0 === this.heroVerticalVelocity) {\r\n            this.heroRotationVelocity = 0;\r\n        }\r\n        if (Math.abs(this.playerNode.rotation) > 75) {\r\n            this.heroRotationVelocity = 0;\r\n        }\r\n        if (!this.stoneList || !this.stoneList[0]) {\r\n            return;\r\n        }\r\n        var stoneObj = this.stoneList[0];\r\n        if (!keep && stoneObj.velocity > 0) {\r\n            this.heroScript.setFlipX(true);\r\n        } else if (stoneObj.velocity < 0) {\r\n            this.heroScript.setFlipX(false);\r\n        }\r\n\r\n    },\r\n\r\n    updateStonePosition: function (dt) {\r\n        var stoneList = this.stoneList;\r\n        for (let i = 0; i < stoneList.length; i++) {\r\n            let stoneObj = stoneList[i];\r\n            if (stoneObj.delayTime > 0) {\r\n                stoneObj.delayTime -= dt;\r\n                continue;\r\n            }\r\n            let node = stoneObj.script.node;\r\n            node.x += stoneObj.velocity * dt;\r\n            stoneObj.velocity += dt * stoneObj.acceleration;\r\n            if ((stoneObj.velocity < 0 && node.x < cc.winSize.width / 2)\r\n                || (stoneObj.velocity > 0 && node.x > cc.winSize.width / 2)) {\r\n                stoneObj.velocity = 0;\r\n                stoneObj.acceleration = 0;\r\n                node.x = cc.winSize.width / 2;\r\n            }\r\n        }\r\n    },\r\n\r\n    //核心检测\r\n    rectIntersectsRect: function (rectA, rectB) {\r\n        if (!rectA || !rectB) {\r\n            return null;\r\n        }\r\n        var rectAMinX = cc.rectGetMinX(rectA);\r\n        var rectAMaxX = cc.rectGetMaxX(rectA);\r\n        var rectAMinY = cc.rectGetMinY(rectA);\r\n        var rectAMaxY = cc.rectGetMaxY(rectA);\r\n\r\n        var rectBMinX = cc.rectGetMinX(rectB);\r\n        var rectBMaxX = cc.rectGetMaxX(rectB);\r\n        var rectBMinY = cc.rectGetMinY(rectB);\r\n        var rectBMaxY = cc.rectGetMaxY(rectB);\r\n\r\n        var newMinX = Math.max(rectAMinX, rectBMinX);\r\n        var newMaxX = Math.min(rectAMaxX, rectBMaxX);\r\n\r\n        var newMinY = Math.max(rectAMinY, rectBMinY);\r\n        var newMaxY = Math.min(rectAMaxY, rectBMaxY);\r\n\r\n        var rect = { x: newMinX, y: newMinY, width: newMaxX - newMinX, height: newMaxY - newMinY };\r\n        if (rect.width <= 0 || rect.height <= 0) {\r\n            rect = null;\r\n        }\r\n        return rect;\r\n    },\r\n\r\n    checkIntersects: function (stoneRect, playerRect) {\r\n        //碰撞结果\r\n        var newRect = this.rectIntersectsRect(stoneRect, playerRect);\r\n        if (!newRect) {\r\n            return null;\r\n        }\r\n\r\n        var dx = newRect.width;\r\n        var dy = newRect.height;\r\n        var result = null;\r\n        if (dx >= playerRect.width) {\r\n            result = { gameStatus: GAME_STATUS.CONTINUE };\r\n        } else if (dy >= 18) {\r\n            result = { gameStatus: GAME_STATUS.OVER };\r\n        } else if (dx <= 16) {\r\n            result = null;\r\n        } else {\r\n            result = { gameStatus: GAME_STATUS.CONTINUE };\r\n        }\r\n        if (result && GAME_STATUS.CONTINUE === result.gameStatus && this.heroVerticalVelocity > 0) {\r\n            result = null;\r\n        }\r\n        return result;\r\n    },\r\n\r\n    updateIntersects: function (playerRect) {\r\n\r\n        var velocity = 0;\r\n        var playerTrueY = GROUND_HEIGHT;\r\n\r\n        //检测运动中的砖块的碰撞\r\n        var resultStone = null;\r\n        if (this.stoneList && this.stoneList[0]) {\r\n            var stoneObj = this.stoneList[0];\r\n\r\n            var stoneRect = stoneObj.script.getStoneRect();\r\n            stoneRect.height += 1;\r\n            // stoneRect.x = AF.util.getDestination(stoneRect.x, stoneObj.velocity, stoneObj.acceleration, dt);\r\n            resultStone = this.checkIntersects(stoneRect, playerRect);\r\n\r\n            velocity = stoneObj.velocity;\r\n            playerTrueY = stoneObj.script.node.y + stoneObj.script.node.height;\r\n        }\r\n        if (resultStone) {\r\n            return Object.assign({}, resultStone, { velocity: velocity, playerTrueY: playerTrueY, type: 'stone' });\r\n        }\r\n\r\n        //检测是否已经落到地面\r\n        velocity = 0;\r\n        var groundRect = {};\r\n        groundRect.x = 0;\r\n        groundRect.y = GROUND_HEIGHT - STONE_INTERVAL;\r\n        groundRect.width = cc.winSize.width;\r\n        groundRect.height = STONE_INTERVAL + 1;\r\n        playerTrueY = GROUND_HEIGHT;\r\n\r\n        if (this.groundStone) {\r\n            groundRect.y = this.groundStone.node.y;\r\n            playerTrueY = this.groundStone.node.y + this.groundStone.node.height;\r\n        }\r\n\r\n        var resultGround = this.checkIntersects(groundRect, playerRect);\r\n\r\n        if (resultGround) {\r\n            resultGround.gameStatus = GAME_STATUS.CONTINUE;\r\n            return Object.assign({}, resultGround, { velocity: velocity, playerTrueY: playerTrueY, type: 'ground' });\r\n        }\r\n        return { gameStatus: GAME_STATUS.DROP };\r\n    },\r\n\r\n    updateGameNextDt: function (result) {\r\n        if (GAME_STATUS.DROP === result.gameStatus) {\r\n            return;\r\n        } else if (GAME_STATUS.OVER === result.gameStatus) {\r\n            //游戏结束perfect\r\n            AF.audio.play('lose');\r\n            if (PLAYER_STATUS.DOUBLE === this.playerStatus) {\r\n                this.doJump();\r\n            }\r\n            this.heroHorizontalVelocity = result.velocity * 3 / 2;\r\n            this.heroRotationVelocity = result.velocity;\r\n            this.gameStatus = GAME_STATUS.OVER;\r\n            this.heroScript.stopAction();\r\n            return;\r\n        }\r\n        //continue\r\n        this.refreshHeroStatus(result);\r\n\r\n        if ('ground' === result.type) {\r\n            return;\r\n        }\r\n\r\n        //获得分数\r\n        this.step += 1;\r\n        var score = BASE_SCORE;\r\n        var tipType = 'normal';\r\n        var tipNum = 0;\r\n        var audioName = 'dong';\r\n        if (this.groundStone) {\r\n            var offsetX = Math.abs(this.stoneList[0].script.node.x - this.groundStone.node.x);\r\n            var dx = this.groundStone.node.width - offsetX;\r\n            if (offsetX <= PREFECT_OFFSET ) {\r\n                this.perfectCount += 1;\r\n                if (this.perfectStoneList.length <= 0) {\r\n                    this.perfectStoneList.push(this.groundStone);\r\n                }\r\n                this.perfectStoneList.push(this.stoneList[0].script);\r\n                if (MAX_PREFECT !== -1 && this.perfectCount > MAX_PREFECT) {\r\n                    score = Math.pow(2 * BASE_SCORE, MAX_PREFECT);\r\n                } else {\r\n                    score = Math.pow(2 * BASE_SCORE, this.perfectCount);\r\n                }\r\n                // score = BASE_SCORE * 2;\r\n                tipType = 'perfect';\r\n                tipNum = this.perfectCount;\r\n                audioName = 'perfect' + (1 + this.perfectCount % 5);\r\n            } else if (dx >= 8) {\r\n                this.perfectCount = 0;\r\n                this.perfectStoneList = [];\r\n                score = BASE_SCORE;\r\n                tipType = 'normal';\r\n                tipNum = 0;\r\n                audioName = 'dong';\r\n\r\n            } else if (dx < 8) {\r\n                this.perfectCount = 0;\r\n                this.perfectStoneList = [];\r\n                score = BASE_SCORE;\r\n                tipType = 'danger';\r\n                tipNum = 0;\r\n                audioName = 'dong';\r\n            }\r\n        }\r\n\r\n        // AF.audio.play(audioName);\r\n\r\n        var stoneObj = this.stoneList.shift();\r\n        var oldGroundStone = this.groundStone;\r\n        var newGroundStone = stoneObj.script;\r\n        this.showTips(tipType, tipNum, score);\r\n        // this.totalScore += score;\r\n        if (oldGroundStone) {\r\n            oldGroundStone.showScoreFadeAction();\r\n            // oldGroundStone.showLight();\r\n        }\r\n        newGroundStone.showScore(score, tipType);\r\n        if (this.stoneList.length <= 5) {\r\n\r\n            var lastStone = this.stoneList[this.stoneList.length - 1];\r\n            var newList = this.getNexStoneList(lastStone, STONE_RANGE[0], STONE_RANGE[1]);\r\n            this.stoneList = this.stoneList.concat(newList);\r\n            // this.stoneList.push(newList);\r\n        }\r\n\r\n        this.refreshCountLabel();\r\n        this.groundStone = newGroundStone;\r\n    },\r\n\r\n    refreshHeroStatus: function (result) {\r\n        this.heroHorizontalVelocity = 0;\r\n        this.playerNode.y = result.playerTrueY;\r\n        switch (this.playerStatus) {\r\n            case PLAYER_STATUS.GROUND:\r\n                this.heroVerticalVelocity = 0;\r\n                break;\r\n            case PLAYER_STATUS.SKY:\r\n                this.showDustEffect(this.heroScript.getFlipX(), result.playerTrueY);\r\n                this.heroScript.playAction('wait');\r\n                this.playerStatus = PLAYER_STATUS.GROUND;\r\n                this.heroVerticalVelocity = 0;\r\n                if ('ground' === result.type) {\r\n                    // AF.audio.play('dong');\r\n                }\r\n                break;\r\n            case PLAYER_STATUS.DOUBLE:\r\n                this.heroVerticalVelocity = 0;\r\n                this.showDustEffect(this.heroScript.getFlipX(), result.playerTrueY);\r\n                this.doJump();\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    },\r\n\r\n    updateGameNodePosition: function (dt, velocity) {\r\n        this.gameNode.y += dt * velocity;\r\n        this.cloudNode.y += dt * velocity;\r\n        this.bgNode.y += dt * velocity;\r\n\r\n        this.refreshCloudMgr();\r\n        this.refreshStonePool();\r\n        this.refreshBGNode();\r\n    },\r\n\r\n    updateLine: function (dt) {\r\n        var message = '';\r\n        var posY = GROUND_HEIGHT;\r\n        var currScore = Math.ceil(this.totalScore / BASE_SCORE);\r\n        var score = 0;\r\n\r\n        var normalLimt = this.step + this.currLimt * NORMAL_INTERVAL - currScore;\r\n        var normalLine = this.lineMgr['normalLine'];\r\n        if (normalLine.y > GROUND_HEIGHT + STONE_INTERVAL * normalLimt) {\r\n            normalLine.y -= dt * (STONE_INTERVAL / 0.1);\r\n        }\r\n        if (currScore >= this.currLimt * NORMAL_INTERVAL) {\r\n            message = 'overNormal';\r\n            posY = normalLine.y;\r\n            // this.showLineEffect(normalLine.y);\r\n            this.currLimt = Math.floor(this.totalScore / NORMAL_INTERVAL) + 1;\r\n            score = (this.currLimt - 1) * NORMAL_INTERVAL * BASE_SCORE;\r\n            if (this.currLimt * NORMAL_INTERVAL === this.playerData.preScore) {\r\n                this.currLimt += 1;\r\n            }\r\n            if (this.currLimt * NORMAL_INTERVAL === Math.ceil(this.playerData.totalScore / this.playerData.playCount)) {\r\n                this.currLimt += 1;\r\n            }\r\n            if (this.currLimt * NORMAL_INTERVAL === this.playerData.bestScore) {\r\n                this.currLimt += 1;\r\n            }\r\n            normalLimt = this.step + this.currLimt * NORMAL_INTERVAL - currScore;\r\n            normalLine.setPosition(cc.winSize.width / 2, GROUND_HEIGHT + STONE_INTERVAL * normalLimt);\r\n        }\r\n\r\n        var preLimt = this.step + this.playerData.preScore - currScore;\r\n        var lastLine = this.lineMgr['lastLine'];\r\n        if (lastLine.y > GROUND_HEIGHT + STONE_INTERVAL * preLimt) {\r\n            lastLine.y -= dt * (STONE_INTERVAL / 0.1);\r\n        }\r\n        if (lastLine.active && preLimt <= this.step) {\r\n            message = 'overPreScore';\r\n            posY = lastLine.y;\r\n            // this.showLineEffect(lastLine.y);\r\n            lastLine.active = false;\r\n        }\r\n\r\n        var averLimt = this.step + Math.ceil(this.playerData.totalScore / this.playerData.playCount) - currScore;\r\n        var aveLine = this.lineMgr['aveLine'];\r\n        if (aveLine.y > GROUND_HEIGHT + STONE_INTERVAL * averLimt) {\r\n            aveLine.y -= dt * (STONE_INTERVAL / 0.1);\r\n        }\r\n        if (aveLine.active && averLimt <= this.step) {\r\n            message = 'overAveScore';\r\n            posY = aveLine.y;\r\n            // this.showLineEffect(aveLine.y);\r\n            aveLine.active = false;\r\n        }\r\n\r\n        var bestLimt = this.step + this.playerData.bestScore - currScore;\r\n        var bestLine = this.lineMgr['bestLine'];\r\n        if (bestLine.y > GROUND_HEIGHT + STONE_INTERVAL * bestLimt) {\r\n            bestLine.y -= dt * (STONE_INTERVAL / 0.1);\r\n        }\r\n        if (bestLine.active && bestLimt <= this.step) {\r\n            message = 'overBestScore';\r\n            posY = bestLine.y;\r\n            // this.showLineEffect(bestLine.y);\r\n            bestLine.active = false;\r\n        }\r\n        if (message) {\r\n            this.showOverMessage(message, score);\r\n            this.showLineEffect(posY);\r\n        }\r\n    },\r\n\r\n    showOverMessage: function (message, score) {\r\n        var overNode = this.uiNode.getChildByName('overNode');\r\n        var gameCountNode = this.uiNode.getChildByName('gameCount');\r\n        var scoreNum = gameCountNode.getChildByName('scoreNum').getComponentInChildren(cc.Label);\r\n        var worldPos = scoreNum.node.convertToWorldSpaceAR(cc.v2(0, 0));\r\n        var localPos = this.uiNode.convertToNodeSpaceAR(cc.v2(worldPos.x, worldPos.y - scoreNum.node.height / 2 - 50));\r\n\r\n        overNode.setPosition(localPos);\r\n\r\n\r\n        var childs = ['overBestScore', 'overAveScore', 'overPreScore', 'overNormal'];\r\n        var node = null;\r\n        for (let i = 0; i < childs.length; i++) {\r\n            let childNode = overNode.getChildByName(childs[i]);\r\n            childNode.stopAllActions();\r\n            childNode.scale = 0;\r\n            if (message === childs[i]) {\r\n                node = childNode;\r\n            }\r\n        }\r\n        if (!node) {\r\n            return;\r\n        }\r\n        if ('overNormal' === message) {\r\n            let scoreNum = node.getChildByName('scoreNum');\r\n            scoreNum.getComponent(cc.Label).string = score;\r\n            node.getChildByName('title').x = 0 - scoreNum.width / 2;\r\n            node.getChildByName('scoreIcon').x = scoreNum.width / 2;\r\n        }\r\n        node.runAction(cc.sequence(\r\n            cc.scaleTo(0.3, 1.2).easing(cc.easeBackOut()),\r\n            cc.scaleTo(0.3, 1).easing(cc.easeBackIn()),\r\n            cc.delayTime(0.4),\r\n            cc.scaleTo(0.1, 0).easing(cc.easeBackOut()),\r\n        ));\r\n    },\r\n\r\n    refreshCloudMgr: function () {\r\n        while (true) {\r\n            let lowCloud = this.cloudMgr[0];\r\n            if (!lowCloud) {\r\n                break;\r\n            }\r\n            let cloudNode = lowCloud.sprite.node;\r\n            let pos = cloudNode.convertToWorldSpaceAR(cc.v2(0, 0));\r\n            if (pos.y >= -4 * STONE_INTERVAL - 0.5 * cloudNode.height) {\r\n                break;\r\n            }\r\n            let heightCloud = this.cloudMgr[this.cloudMgr.length - 1];\r\n            lowCloud.cloudId = heightCloud.cloudId + 1;\r\n            this.refreshCloudUI(lowCloud);\r\n            var newHeightCloud = this.cloudMgr.shift();\r\n            this.cloudMgr.push(newHeightCloud);\r\n        }\r\n    },\r\n\r\n    refreshStonePool: function () {\r\n        for (let i = 0; i < this.stonePool.length; i++) {\r\n            let stoneObj = this.stonePool[i];\r\n            if (!stoneObj.status) {\r\n                continue;\r\n            }\r\n            let stoneNode = stoneObj.script.node;\r\n            let pos = stoneNode.convertToWorldSpaceAR(cc.v2(0, 0));\r\n            if (pos.y < -4 * STONE_INTERVAL) {\r\n                stoneObj.status = false;\r\n                stoneNode.setPosition(-1000, 0);\r\n                stoneNode.opacity = 255;\r\n                stoneNode.zIndex = -1;\r\n            }\r\n        }\r\n        while (true && this.perfectStoneList[0]) {\r\n            let stone = this.perfectStoneList[0];\r\n            let stoneNode = stone.node;\r\n            let pos = stoneNode.convertToWorldSpaceAR(cc.v2(0, 0));\r\n            if (pos.y < -4 * STONE_INTERVAL) {\r\n                this.perfectStoneList.shift();\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n    },\r\n\r\n    refreshBGNode: function () {\r\n        var maxY = this.bgMgr[this.bgMgr.length - 1].height + this.bgMgr[this.bgMgr.length - 1].y;\r\n        var lowBgNode = this.bgMgr[0];\r\n        var lowPos = lowBgNode.convertToWorldSpaceAR(cc.v2(0, 0));\r\n        if (lowPos.y < -4 * STONE_INTERVAL - 1 * lowBgNode.height) {\r\n            this.bgMgr.shift();\r\n            this.bgMgr.push(lowBgNode);\r\n            lowBgNode.y = maxY;\r\n            return;\r\n        }\r\n        \r\n        // var minY = this.bgMgr[0].y;\r\n        // var heightBgNode = this.bgMgr[this.bgMgr.length - 1];\r\n        // var heightPos = heightBgNode.convertToWorldSpaceAR(cc.p(0, 0));\r\n        // if (heightPos.y > 4 * STONE_INTERVAL) {\r\n        //     this.bgMgr.pop();\r\n        //     this.bgMgr.unshift(lowBgNode);\r\n        //     lowBgNode.y = minY - 1 * heightBgNode.height;\r\n        //     return;\r\n        // }\r\n    },\r\n\r\n    update: function (dt) {\r\n        if (!this.gameStart) {\r\n            return;\r\n        }\r\n        if ('ROCKET' === this.gameModle) {\r\n            this.updateRocket(dt);\r\n        } else if ('NORMAL' === this.gameModle) {\r\n            this.updateNormal(dt);\r\n        }\r\n    },\r\n\r\n    updateNormal: function (dt) {\r\n        if (GAME_STATUS.PAUSE === this.gameStatus) {\r\n            return;\r\n        }\r\n        //更新英雄位置\r\n        this.updateHeroPosition(dt);\r\n        //更新云层 石头 背景\r\n        var currY = Math.abs(this.gameNode.y);\r\n        if (currY - cc.winSize.height / 2 <= this.step * STONE_INTERVAL) {\r\n            this.updateGameNodePosition(dt, -2 * STONE_INTERVAL);\r\n        } else if (currY - cc.winSize.height / 2 >= (this.step + 1) * STONE_INTERVAL) {\r\n            this.updateGameNodePosition(dt, 2 * STONE_INTERVAL);\r\n        }\r\n        this.updateLine(dt);\r\n        switch (this.gameStatus) {\r\n            case GAME_STATUS.BALANCE:\r\n                break;\r\n            case GAME_STATUS.PAUSE:\r\n                break;\r\n            case GAME_STATUS.OVER:\r\n                this.gameStatus = GAME_STATUS.BALANCE;\r\n                var params = {\r\n                    modle: 'balance',\r\n                    data: {\r\n                        score: this.totalScore,\r\n                        startTime: this.gameStartTime,\r\n                    }\r\n                };\r\n                if (!AF.util.isVideoAdLoaded()) {\r\n                    this.reviveEnable = false;\r\n                } else if (this.reviveEnable) {\r\n                    this.gameStatus = GAME_STATUS.PAUSE;\r\n                    var params = {\r\n                        modle: 'revive',\r\n                        data: {\r\n                            score: this.totalScore,\r\n                            startTime: this.gameStartTime,\r\n                        }\r\n                    };\r\n                }\r\n                this.scoreNode.active = false;\r\n                AF.openDialog('HallBalanceDialog', params);\r\n                break;\r\n            case GAME_STATUS.CONTINUE:\r\n                var playerRect = this.playerNode.getBoundingBox();\r\n                //砖石位置更新\r\n                this.updateStonePosition(dt);\r\n                //检测碰撞框\r\n                var result = this.updateIntersects(playerRect);\r\n                //游戏数据\r\n                this.updateGameNextDt(result);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    },\r\n\r\n    updateRocket: function (dt) {\r\n        this.updateRocketBg(dt);\r\n        //更新英雄位置\r\n        this.updateHeroPosition(dt, true);\r\n        //更新云层 石头 背景\r\n        var currY = Math.abs(this.gameNode.y);\r\n        if (currY - cc.winSize.height / 2 <= (this.step + 4) * STONE_INTERVAL) {\r\n            var velocity = -10 * STONE_INTERVAL * 2 / 1;\r\n            this.updateGameNodePosition(dt, velocity);\r\n        }\r\n\r\n        this.updateRocketStonePosition(dt);\r\n        this.catchHeroPosition();\r\n        this.checkStone();\r\n    },\r\n\r\n    onTouchStart: function (event) {\r\n\r\n        switch (this.playerStatus) {\r\n            case PLAYER_STATUS.GROUND:\r\n                console.warn('玩家在地面.');\r\n                this.doJump();\r\n                break;\r\n            case PLAYER_STATUS.SKY:\r\n                console.warn('玩家在空中.');\r\n                this.playerStatus = PLAYER_STATUS.DOUBLE;\r\n                break;\r\n            case PLAYER_STATUS.DOUBLE:\r\n                console.warn('玩家连跳.');\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    },\r\n\r\n    doJump: function () {\r\n        AF.audio.play('jump');\r\n        this.heroScript.playAction(jumpActionName, true);\r\n        this.heroVerticalVelocity = VELOCITY;\r\n        this.playerStatus = PLAYER_STATUS.SKY;\r\n    },\r\n\r\n    /********** 按钮回调函数 **********/\r\n    onPlayerButtonClick: function (event, custom) {\r\n        return;\r\n    },\r\n\r\n    onRankButtonClick: function (event, custom) {\r\n        // AF.ToastMessage.show('功能开发中');\r\n        AF.gotoScene(\"HallRankScene\");\r\n\r\n        // function finish(res) {\r\n        //     if (res) {\r\n        //         AF.ToastMessage.show(\"观看完毕\");\r\n        //     } else {\r\n        //         AF.ToastMessage.show(\"观看中止\");\r\n        //     }\r\n        // }\r\n\r\n        // AF.util.showVideoAd(\"power\", finish);\r\n    },\r\n\r\n    onReviveButtonClick: function (event, custom) {\r\n        for (let i = 0; i < this.stoneList.length; i++) {\r\n            let stoneObj = this.stoneList[i];\r\n            stoneObj.script.node.setPosition(-1000, 0);\r\n        }\r\n        \r\n        AF.audio.resumeBGM();\r\n        this.stoneList = [];\r\n        var lastStone = null;\r\n        if (this.groundStone) {\r\n            lastStone = {\r\n                script: this.groundStone,\r\n                type: 'stone',\r\n                velocity: 0,\r\n                acceleration: 0,\r\n                delayTime: 2,\r\n            };\r\n        }\r\n        var newList = this.getNexStoneList(lastStone, STONE_RANGE[0], STONE_RANGE[1]);\r\n        this.stoneList = this.stoneList.concat(newList);\r\n        var newList = this.getNexStoneList(this.stoneList[this.stoneList.length - 1], STONE_RANGE[0], STONE_RANGE[1]);\r\n        this.stoneList = this.stoneList.concat(newList);\r\n\r\n        this.heroVerticalVelocity = 0;\r\n        this.heroHorizontalVelocity = 0;\r\n        this.heroRotationVelocity = 0;\r\n        this.heroScript.playAction('wait');\r\n\r\n        this.playerNode.zIndex = 9;\r\n        this.playerNode.rotation = 0;\r\n        this.playerNode.setPosition(cc.winSize.width / 2, GROUND_HEIGHT + (this.step + 1) * STONE_INTERVAL);\r\n        this.reviveEnable = false;\r\n        this.gameStatus = GAME_STATUS.CONTINUE;\r\n        this.playerStatus = PLAYER_STATUS.SKY;\r\n\r\n        this.reviveButton.active = false;\r\n    },\r\n\r\n    onGameStart: function (result) {\r\n        if (!result) {\r\n            return;\r\n        }\r\n        var self = this;\r\n        var actions = [];\r\n        var time1 = 0.2;\r\n        var time2 = 0.8;\r\n        self.playerNode.y = GROUND_HEIGHT + STONE_INTERVAL * 1.5\r\n        self.playerNode.active = false;\r\n        self.hideStartButton();\r\n        // actions.push(\r\n        //     cc.callFunc(function () {\r\n        //         let logoNode = self.uiNode.getChildByName('logoNode');\r\n        //         logoNode.runAction(cc.moveBy(time1, 0, -150));\r\n        //     })\r\n        // );\r\n        // actions.push(cc.delayTime(time1+0.05));\r\n        actions.push(\r\n            cc.callFunc(function () {\r\n                let origin = cc.v2(0 - cc.winSize.width / 2, 0 - cc.winSize.height / 2);\r\n                self.gameNode.runAction(cc.moveTo(time2, origin)).easing(cc.easeSineIn(3))\r\n                self.cloudNode.runAction(cc.moveTo(time2, origin)).easing(cc.easeSineIn(3))\r\n                self.bgNode.runAction(cc.moveTo(time2, origin)).easing(cc.easeSineIn(3))\r\n                let speed = Math.abs(self.cloudNode.y + cc.winSize.height / 2) / time2;\r\n                let logoNode = self.uiNode.getChildByName('logoNode');\r\n                logoNode.runAction(cc.moveBy(1000 / speed, 0, 1000))\r\n            })\r\n        );\r\n        actions.push(cc.delayTime(time2));\r\n        actions.push(\r\n            cc.callFunc(function () {\r\n                AF.audio.playDefaultBGM();\r\n                AF.audio.play('ready');\r\n                let startNode = self.uiNode.getChildByName('startNode');\r\n                let childNode = startNode.getChildByName('ready');\r\n                childNode.runAction(cc.sequence(\r\n                    cc.scaleTo(0.15, 1.2),\r\n                    cc.scaleTo(0.15, 1),\r\n                    cc.delayTime(0.2),\r\n                    cc.scaleTo(0.1, 0),\r\n                ));\r\n            })\r\n        );\r\n        actions.push(cc.delayTime(0.2));\r\n        actions.push(\r\n            cc.callFunc(function () {\r\n                self.playerNode.active = true\r\n                let scale = self.playerNode.scale\r\n                self.playerNode.scale = 0\r\n                self.playerNode.runAction(cc.sequence(\r\n                    // cc.blink(0.3, 2)\r\n                    cc.scaleTo(0.3, 1 * scale, 0.8 * scale),\r\n                    cc.scaleTo(0.3, 0.8 * scale, 1 * scale),\r\n                    cc.scaleTo(0.1, scale),\r\n                ))\r\n                self.gameModle = 'NORMAL';\r\n                self.gameStart = true;\r\n                self.gameStatus = GAME_STATUS.CONTINUE;\r\n                self.playerStatus = PLAYER_STATUS.SKY;\r\n            })\r\n        );\r\n        actions.push(cc.delayTime(0.3));\r\n        for (let i = 2; i > 0; i--) {\r\n            actions.push(\r\n                cc.callFunc(function () {\r\n                    AF.audio.play('ready');\r\n                    let nodeName = 'cutdown' + i % 2;\r\n                    let startNode = self.uiNode.getChildByName('startNode');\r\n                    let childNode = startNode.getChildByName(nodeName);\r\n                    childNode.getComponent(cc.Label).string = i;\r\n                    childNode.runAction(cc.sequence(\r\n                        cc.scaleTo(0.15, 1.2),\r\n                        cc.scaleTo(0.15, 1),\r\n                        cc.delayTime(0.2),\r\n                        cc.scaleTo(0.1, 0),\r\n                    ));\r\n                })\r\n            );\r\n            actions.push(cc.delayTime(0.5));\r\n        }\r\n        actions.push(\r\n            cc.callFunc(function () {\r\n                AF.audio.play('ready');\r\n                let startNode = self.uiNode.getChildByName('startNode');\r\n                let childNode = startNode.getChildByName('go');\r\n                childNode.runAction(cc.sequence(\r\n                    cc.scaleTo(0.15, 1.2),\r\n                    cc.scaleTo(0.15, 1),\r\n                    cc.delayTime(0.2),\r\n                    cc.scaleTo(0.1, 0),\r\n                ));\r\n            })\r\n        );\r\n        actions.push(cc.delayTime(0.5));\r\n        actions.push(\r\n            cc.callFunc(function () {\r\n                self.doStartGame(result);\r\n            })\r\n        );\r\n        this.node.runAction(cc.sequence(actions));\r\n    },\r\n\r\n    doStartGame: function (result) {\r\n        if (!result) {\r\n            return;\r\n        }\r\n        if ('ROCKET' === result) {\r\n            this.doRocketRush();\r\n        } else if ('NORMAL' === result) {\r\n\r\n            this.gameModle = 'NORMAL';\r\n\r\n            var newList = this.getNexStoneList(null, STONE_RANGE[0], STONE_RANGE[1]);\r\n            this.stoneList = this.stoneList.concat(newList);\r\n            var newList = this.getNexStoneList(this.stoneList[this.stoneList.length - 1], STONE_RANGE[0], STONE_RANGE[1]);\r\n            this.stoneList = this.stoneList.concat(newList);\r\n\r\n        }\r\n\r\n        this.gameStart = true;\r\n        var gameCountNode = this.uiNode.getChildByName('gameCount');\r\n        gameCountNode.active = true;\r\n\r\n\r\n        this.gameStatus = GAME_STATUS.CONTINUE;\r\n        this.playerStatus = PLAYER_STATUS.SKY;\r\n        this.reviveEnable = true;\r\n    },\r\n\r\n    onStartButtonClick: function (event, custom) {\r\n        // AF.ToastMessage.show('功能开发中');\r\n        if (!this.heroScript.isLoaded()) {\r\n            AF.ToastMessage.show('人物加载中');\r\n            return;\r\n        }\r\n        var self = this;\r\n        var openRocketDialog = function (score) {\r\n            return new Promise(function (resolve, reject) {\r\n                AF.openDialog('HallRocketDialog', {\r\n                    score: score,\r\n                    callBack: resolve,\r\n                });\r\n            });\r\n        }\r\n        var score = Math.floor(self.playerData.preScore / 1000);\r\n        if (score > 0 && AF.util.isVideoAdLoaded()) {\r\n            openRocketDialog(score * 1000).then((result) => {\r\n                self.onGameStart(result);\r\n            });\r\n        } else {\r\n            self.onGameStart('NORMAL');\r\n        }\r\n    },\r\n\r\n    getNexStoneList: function (lastStone, minLength, maxLength) {\r\n        minLength = minLength || 3;\r\n        maxLength = maxLength || 5;\r\n\r\n        var direction = 0;\r\n        if (lastStone) {\r\n            if (lastStone.velocity < 0) {\r\n                direction = 1;\r\n            } else if (lastStone.velocity > 0) {\r\n                direction = -1;\r\n            }\r\n        }\r\n        if (!direction) {\r\n            if (Math.ceil(Math.random() * 1000) % 2) {\r\n                direction = 1;\r\n            } else {\r\n                direction = -1;\r\n            }\r\n        }\r\n\r\n\r\n        var startX = cc.winSize.width * 3 / 2;\r\n        var startY = GROUND_HEIGHT;\r\n        var baseDelayTime = 0;\r\n        var baseAcceleration = 0;\r\n\r\n        if (lastStone) {\r\n            startY = lastStone.script.node.y + STONE_INTERVAL;\r\n            if (lastStone.delayTime > 0) {\r\n                baseDelayTime = lastStone.delayTime;\r\n                baseAcceleration = lastStone.acceleration;\r\n            }\r\n        }\r\n        var width = 0;\r\n        var minSpeed = 160;\r\n        var maxSpeed = 260;\r\n        var baseDt = 0.8;\r\n\r\n        if (startY < 20 * STONE_INTERVAL) {\r\n            width = stone_velocity_config.low.width;\r\n            baseDt = stone_velocity_config.low.baseDt;\r\n            minSpeed = stone_velocity_config.low.minSpeed;\r\n            maxSpeed = stone_velocity_config.low.maxSpeed;\r\n        } else if (startY < 50 * STONE_INTERVAL) {\r\n            width = stone_velocity_config.middle.width;\r\n            baseDt = stone_velocity_config.middle.baseDt;\r\n            minSpeed = stone_velocity_config.middle.minSpeed;\r\n            maxSpeed = stone_velocity_config.middle.maxSpeed;\r\n        } else {\r\n            //else if (startY < 125 * STONE_INTERVAL)\r\n            width = stone_velocity_config.height.width;\r\n            baseDt = stone_velocity_config.height.baseDt;\r\n            minSpeed = stone_velocity_config.height.minSpeed;\r\n            maxSpeed = stone_velocity_config.height.maxSpeed;\r\n        }\r\n        startX = cc.winSize.width + width / 2;\r\n        if (direction > 0) {\r\n            startX = 0 - width / 2\r\n        }\r\n        var preVelocity = direction * (minSpeed + Math.random() * (maxSpeed - minSpeed));\r\n        var preAcceleration = baseAcceleration;\r\n\r\n        var stoneList = [];\r\n        var num = minLength + Math.ceil(Math.random() * (maxLength - minLength));\r\n        for (let i = 0; i < num; i++) {\r\n            \r\n            let stoneScript = this.getStone();\r\n            stoneScript.init();\r\n            stoneScript.setStoneType('stone');\r\n            stoneScript.setStoneRect(width, STONE_INTERVAL);\r\n            stoneScript.setNewColor(width);\r\n\r\n            stoneScript.node.setPosition(startX, startY + i * STONE_INTERVAL);\r\n            stoneScript.node.zIndex = 5;\r\n\r\n            let acceleration = 0;\r\n            \r\n            let velocity = direction * minSpeed;\r\n            if (i > 0) {\r\n                velocity = preVelocity + direction * SPEED_DIFF + direction * 0.8 * Math.random() * Math.abs(maxSpeed - Math.abs(preVelocity));\r\n                if (Math.abs(velocity) > maxSpeed) {\r\n                    velocity = direction * maxSpeed;\r\n                }\r\n                // while (Math.abs(velocity) > maxSpeed) {\r\n                //     velocity = preVelocity + direction * 0.8 * Math.random() * Math.abs(maxSpeed - Math.abs(preVelocity));\r\n                // }\r\n            }\r\n            let delayTime = baseDelayTime + (i + 1) * CREATE_DEALY_TIME;\r\n            if (!lastStone && !i) {\r\n                delayTime = 1;\r\n            }\r\n\r\n            let stoneObj = {\r\n                script: stoneScript,\r\n                type: 'stone',\r\n                velocity: velocity,\r\n                acceleration: acceleration,\r\n                delayTime: delayTime,\r\n            };\r\n            stoneList.push(stoneObj);\r\n\r\n            preVelocity = velocity;\r\n            preAcceleration = acceleration;\r\n        }\r\n        return stoneList;\r\n    },\r\n\r\n    getStone: function () {\r\n        var stoneScript = null;\r\n        for (let i = 0; i < this.stonePool.length; i++) {\r\n            let stoneObj = this.stonePool[i];\r\n            if (!stoneObj.status) {\r\n                stoneObj.status = true;\r\n                stoneScript = stoneObj.script;\r\n                break;\r\n            }\r\n        }\r\n        if (!stoneScript) {\r\n            stoneScript = this.createNewStone();\r\n            this.stonePool.push({ script: stoneScript, status: true });\r\n        }\r\n        return stoneScript;\r\n    },\r\n\r\n    hideStartButton: function () {\r\n\r\n        // var logo = this.uiNode.getChildByName('logo');\r\n        // logo.active = false;\r\n        // this.uiNode.getChildByName('bg').active = false;\r\n\r\n        var playerButton = this.uiNode.getChildByName('playerButton');\r\n        playerButton.active = false;\r\n\r\n        var rankButton = this.uiNode.getChildByName('rankButton');\r\n        rankButton.active = false;\r\n\r\n        var startButton = this.uiNode.getChildByName('startButton');\r\n        startButton.active = false;\r\n    },\r\n\r\n    showBalance: function () {\r\n\r\n        var playerData = this.playerData;\r\n        var score = this.totalScore / BASE_SCORE;\r\n        playerData.playCount += 1;\r\n        playerData.totalScore += score;\r\n        playerData.preScore = score;\r\n        if (score > playerData.bestScore) {\r\n            playerData.bestScore = score;\r\n        }\r\n        AF.GameData.setMyPlayerData(playerData);\r\n        AF.GameData.savePlayerData(playerData);\r\n        // let playerDataStr = JSON.stringify(playerData);\r\n        // AF.util.setStorage(\"player_data\", playerDataStr);\r\n\r\n        // this.playerId = AF.GameConfig.getRandomPlayerId();\r\n        this.initGameStart();\r\n\r\n        // this.uiNode.getChildByName('bg').active = true;\r\n\r\n        var playerButton = this.uiNode.getChildByName('playerButton');\r\n        playerButton.active = true;\r\n\r\n        var rankButton = this.uiNode.getChildByName('rankButton');\r\n        rankButton.active = true;\r\n\r\n        var startButton = this.uiNode.getChildByName('startButton');\r\n        startButton.active = true;\r\n    },\r\n\r\n    showRevive: function () {\r\n\r\n        this.heroVerticalVelocity = 0;\r\n        this.heroHorizontalVelocity = 0;\r\n        this.heroRotationVelocity = 0;\r\n        this.heroScript.playAction('wait');\r\n\r\n        this.playerNode.zIndex = 9;\r\n        this.playerNode.rotation = 0;\r\n        this.playerNode.setPosition(cc.winSize.width / 2, GROUND_HEIGHT + (this.step + 2) * STONE_INTERVAL);\r\n        this.reviveEnable = false;\r\n        this.gameStatus = GAME_STATUS.CONTINUE;\r\n        this.playerStatus = PLAYER_STATUS.SKY;\r\n\r\n\r\n    },\r\n\r\n    refreshCountLabel: function () {\r\n\r\n        var gameCountNode = this.uiNode.getChildByName('gameCount');\r\n        var scoreNum = gameCountNode.getChildByName('scoreNum').getComponentInChildren(cc.Label);\r\n        scoreNum.string = this.totalScore;\r\n\r\n    },\r\n\r\n    showTips: function (tipType, tipNum, score) {\r\n\r\n        // var tips = this.uiNode.getChildByName('tips');\r\n        // var title = tips.getChildByName('title').getComponent(cc.Sprite);\r\n        // var addIcon = tips.getChildByName('addIcon').getComponent(cc.Sprite);\r\n        // var scoreNum = tips.getChildByName('scoreNum').getComponent(cc.Label);\r\n\r\n        var gameCountNode = this.uiNode.getChildByName('gameCount');\r\n        var totalScoreNode = gameCountNode.getChildByName('scoreNum');\r\n        let scoreNum = totalScoreNode.getComponentInChildren(cc.Label);\r\n        \r\n        var index = -1;\r\n        switch (tipType) {\r\n            case 'perfect':\r\n                scoreNum.font = this.perfectFont;\r\n                index = 1;\r\n                this.addGoodFlyEffect(score, tipNum);\r\n\r\n                break;\r\n            case 'normal':\r\n                scoreNum.font = this.normalFont;\r\n                index = -1;\r\n                this.totalScore += score;\r\n                // this.addShakerEffect(totalScoreNode, 0.1);\r\n                break;\r\n            case 'danger':\r\n                scoreNum.font = this.normalFont;\r\n                index = 0;\r\n                score = BASE_SCORE;\r\n                this.addShakerEffect(totalScoreNode, 0.1);\r\n                this.totalScore += score;\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n\r\n        /*if (index < 0) {\r\n            title.node.active = false;\r\n            addIcon.node.active = false;\r\n            scoreNum.node.active = false;\r\n        } else {\r\n            title.node.active = true;\r\n            title.spriteFrame = this.titleSpriteFrames[index];\r\n            title.node.runAction(cc.sequence(\r\n                cc.scaleTo(0.05, 1.2).easing(cc.easeBackOut()),\r\n                cc.scaleTo(0.05, 1).easing(cc.easeBackIn()),\r\n            ));\r\n        }\r\n        scoreNum.string = score;\r\n        addIcon.node.active = true;\r\n        scoreNum.node.active = true;*/\r\n\r\n\r\n        // tipType = 'goodJob';\r\n        if ('perfect' !== tipType) {\r\n            return;\r\n        }\r\n\r\n        for (let i = 0; i < this.perfectStoneList.length; i++) {\r\n            let stone = this.perfectStoneList[i];\r\n            stone.showLight();\r\n        }\r\n    },\r\n\r\n    showGoodJobMessage: function (index) {\r\n\r\n        var tips = this.uiNode.getChildByName('tips');\r\n        /*var title = tips.getChildByName('title').getComponent(cc.Sprite);\r\n        var addIcon = tips.getChildByName('addIcon').getComponent(cc.Sprite);\r\n        var scoreNum = tips.getChildByName('scoreNum').getComponent(cc.Label);\r\n\r\n        title.node.active = true;\r\n        addIcon.node.active = false;\r\n        scoreNum.node.active = false;\r\n\r\n        title.spriteFrame = this.titleSpriteFrames[index];\r\n\r\n        title.node.stopAllActions();\r\n        title.node.setScale(0);\r\n        title.node.runAction(cc.sequence(\r\n            cc.scaleTo(0.3, 1.2).easing(cc.easeBackOut()),\r\n            cc.scaleTo(0.3, 1).easing(cc.easeBackIn()),\r\n            cc.delayTime(0.4),\r\n            cc.scaleTo(0.1, 0).easing(cc.easeBackOut()),\r\n        ));*/\r\n\r\n        var audioName = 'tip1';\r\n        var effectNames = ['cool', 'good', 'great', 'prefect', 'wonderful', 'unbelievable'];\r\n        var effectName = 'cool';\r\n        if (index >= 6) {\r\n            // title.spriteFrame = this.titleSpriteFrames[5];\r\n            audioName = 'tip6';\r\n            effectName = effectNames[5];\r\n        } else {\r\n            // title.spriteFrame = this.titleSpriteFrames[index - 1];\r\n            effectName = effectNames[index - 1];\r\n            audioName = 'tip' + index;\r\n        }\r\n        AF.audio.play(audioName);\r\n        this.showTipsEffect(effectName);\r\n    },\r\n\r\n    getGoldObj: function () {\r\n\r\n        var goldObj = null;\r\n        for (let i = 0; i < this.goldPool.length; i++) {\r\n            goldObj = this.goldPool[i];\r\n            if (!goldObj.workStatus) {\r\n                return goldObj;\r\n            }\r\n        }\r\n        var node = cc.instantiate(this.goldNode);\r\n        node.setPosition(320, -100);\r\n        this.gameNode.addChild(node, 1);\r\n        goldObj = {\r\n            node: node,\r\n            workStatus: false\r\n        };\r\n\r\n        this.goldPool.push(goldObj);\r\n        return goldObj;\r\n    },\r\n\r\n    showDustEffect: function (flipX, posY) {\r\n        if (!this.dustEffect) {\r\n            var dustEffectNode = cc.instantiate(this.effectPre);\r\n            this.gameNode.addChild(dustEffectNode, 2, 'dustEffectNode');\r\n            this.dustEffect = dustEffectNode.getComponent('EffectPrefab');\r\n        }\r\n        var offsetX = 64;\r\n        if (!flipX) {\r\n            offsetX = -64;\r\n        }\r\n        this.dustEffect.node.setPosition(cc.winSize.width / 2 + offsetX, posY + 64);\r\n        this.dustEffect.doStart(\"dust\", 1, 1, 25);\r\n        this.dustEffect.setFlipX(flipX);\r\n    },\r\n\r\n    showLineEffect: function (posY) {\r\n        if (!this.lineEffect) {\r\n            var lineEffect = cc.instantiate(this.effectPre);\r\n            this.gameNode.addChild(lineEffect, 2, 'lineEffect');\r\n            this.lineEffect = lineEffect.getComponent('EffectPrefab');\r\n        }\r\n        this.lineEffect.node.setPosition(cc.winSize.width / 2, posY + 64);\r\n        this.lineEffect.doStart(\"xian\", 1, 1, 25);\r\n    },\r\n\r\n    showTipsEffect: function (effectName) {\r\n        if (!this.tipsEffect) {\r\n            var tipsNode = this.uiNode.getChildByName('tips');\r\n            var tipsEffectNode = cc.instantiate(this.effectPre);\r\n            tipsNode.addChild(tipsEffectNode, 2, 'tipsEffect');\r\n            this.tipsEffect = tipsEffectNode.getComponent('EffectPrefab');\r\n        }\r\n        this.tipsEffect.node.setPosition(0, 0);\r\n        this.tipsEffect.doStart(effectName, 1, 1, 12);\r\n    },\r\n\r\n    doRocketRush: function () {\r\n        this.gameModle = 'ROCKET';\r\n\r\n        this.intervalSwitchBg = 0;\r\n        this.rocketBg.active = true;\r\n        var center = cc.v2(cc.winSize.width / 2, cc.winSize.height / 2);\r\n        this.rocketBg.setPosition(cc.v2(0 - cc.winSize.width / 2, 0 - cc.winSize.height / 2));\r\n        var bg1 = this.rocketBg.getChildByName('rocketBg1');\r\n        bg1.scaleY = cc.winSize.height / bg1.height;\r\n        bg1.setPosition(center);\r\n        var bg2 = this.rocketBg.getChildByName('rocketBg2');\r\n        bg2.scaleY = cc.winSize.height / bg2.height;\r\n        bg2.setPosition(center);\r\n\r\n        for (let i = 0; i < this.stonePool.length; i++) {\r\n            let stoneObj = this.stonePool[i];\r\n            stoneObj.status = false;\r\n            stoneObj.script.node.setPosition(-1000, 0);\r\n            stoneObj.script.node.opacity = 255;\r\n        }\r\n        this.stoneList = [];\r\n        for (let i = 0; i < 10; i++) {\r\n            let lastStone = null;\r\n            if (this.stoneList.length) {\r\n                lastStone = this.stoneList[this.stoneList.length - 1];\r\n            }\r\n            let newStone = this.getRocketStone(lastStone);\r\n            this.stoneList.push(newStone);\r\n        }\r\n        this.heroVerticalVelocity = VELOCITY * 1.5;\r\n    },\r\n\r\n    updateRocketBg: function (dt) {\r\n        this.intervalSwitchBg += dt;\r\n        if (this.intervalSwitchBg <= 0.2) {\r\n            return;\r\n        }\r\n\r\n        this.intervalSwitchBg = 0;\r\n        this.rocketBg.setPosition(cc.v2(0 - cc.winSize.width / 2, 0 - cc.winSize.height / 2));\r\n        var bg1 = this.rocketBg.getChildByName('rocketBg1');\r\n        var bg2 = this.rocketBg.getChildByName('rocketBg2');\r\n\r\n        if (bg1.active) {\r\n            bg1.active = false;\r\n            bg2.active = true;\r\n        } else {\r\n            bg1.active = true;\r\n            bg2.active = false;\r\n        }\r\n    },\r\n\r\n    getRocketStone: function (lastStone) {\r\n        var startY = GROUND_HEIGHT;\r\n        var direction = -1;\r\n\r\n        var preMoveTime = 0;\r\n        var direction = 0;\r\n        if (lastStone) {\r\n            startY = lastStone.script.node.y + STONE_INTERVAL;\r\n            preMoveTime = AF.util.getMoveTime(Math.abs(lastStone.script.node.x - cc.winSize.width / 2), lastStone.velocity, lastStone.acceleration);\r\n            preMoveTime += lastStone.delayTime;\r\n            if (lastStone.velocity < 0) {\r\n                direction = 1;\r\n            } else if (lastStone.velocity > 0) {\r\n                direction = -1;\r\n            }\r\n        }\r\n        if (!direction) {\r\n            if (Math.ceil(Math.random() * 1000) % 2) {\r\n                direction = 1;\r\n            } else {\r\n                direction = -1;\r\n            }\r\n        }\r\n        var moveTime = 0.4 / 2;\r\n        var velocity = 1200 * direction * 2;\r\n        var startX = cc.winSize.width / 2 - moveTime * velocity;\r\n\r\n        var stoneScript = this.getStone();\r\n        stoneScript.init();\r\n        stoneScript.setStoneType('stone');\r\n        stoneScript.setNewColor(stone_velocity_config.low.width);\r\n        stoneScript.setStoneRect(stone_velocity_config.low.width, STONE_INTERVAL);\r\n        stoneScript.node.setPosition(startX, startY);\r\n        var acceleration = 0;\r\n        var delayTime = preMoveTime - moveTime + 0.1 / 2;\r\n        if (delayTime < 0) {\r\n            delayTime = 0;\r\n        }\r\n\r\n        var stoneObj = {\r\n            script: stoneScript,\r\n            type: 'stone',\r\n            velocity: velocity,\r\n            acceleration: acceleration,\r\n            delayTime: delayTime,\r\n        };\r\n        return stoneObj;\r\n    },\r\n\r\n    updateRocketStonePosition: function (dt) {\r\n        dt = dt || 1 / 60;\r\n        var stoneList = this.stoneList;\r\n        for (let i = 0; i < stoneList.length; i++) {\r\n            let stoneObj = stoneList[i];\r\n            if (stoneObj.delayTime > 0) {\r\n                stoneObj.delayTime -= dt;\r\n                continue;\r\n            }\r\n            let node = stoneObj.script.node;\r\n            node.x += stoneObj.velocity * dt;\r\n            stoneObj.velocity += dt * stoneObj.acceleration;\r\n        }\r\n        while (true) {\r\n            let stoneObj = stoneList[0];\r\n            if (!stoneObj) {\r\n                break;\r\n            }\r\n            let node = stoneObj.script.node;\r\n            if ((stoneObj.velocity < 0 && node.x < cc.winSize.width / 2)\r\n                || (stoneObj.velocity > 0 && node.x > cc.winSize.width / 2)) {\r\n                stoneObj.velocity = 0;\r\n                stoneObj.acceleration = 0;\r\n                node.x = cc.winSize.width / 2;\r\n                stoneList.shift();\r\n                this.groundStone = stoneObj.script;\r\n                this.perfectStoneList.push(this.groundStone);\r\n                this.step += 1;\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n        if (this.stoneList.length >= 10 || this.step >= 40) {\r\n            return;\r\n        }\r\n        for (let i = 0; i < 10; i++) {\r\n            let lastStone = null;\r\n            if (this.stoneList.length) {\r\n                lastStone = this.stoneList[this.stoneList.length - 1];\r\n            }\r\n            let newStone = this.getRocketStone(lastStone);\r\n            this.stoneList.push(newStone);\r\n        }\r\n    },\r\n\r\n    catchHeroPosition: function () {\r\n        var heroPos = this.playerNode.convertToWorldSpaceAR(cc.v2(0, 0));\r\n        if (heroPos.y <= GROUND_HEIGHT) {\r\n            var gamePos = this.gameNode.convertToNodeSpaceAR(cc.v2(320, GROUND_HEIGHT));\r\n            this.playerNode.setPosition(gamePos);\r\n            // this.heroVerticalVelocity = STONE_INTERVAL / 0.2;\r\n        }\r\n    },\r\n\r\n    checkStone: function () {\r\n        if (this.stoneList.length > 0) {\r\n            return;\r\n        }\r\n\r\n        this.gameModle = 'NORMAL';\r\n        this.rocketBg.active = false;\r\n\r\n        var newList = this.getNexStoneList({\r\n            script: this.groundStone,\r\n            type: 'stone',\r\n            velocity: 0,\r\n            acceleration: 0,\r\n            delayTime: 0.5,\r\n        }, STONE_RANGE[0], STONE_RANGE[1]);\r\n        this.stoneList = this.stoneList.concat(newList);\r\n        var newList = this.getNexStoneList(this.stoneList[this.stoneList.length - 1], STONE_RANGE[0], STONE_RANGE[1]);\r\n        this.stoneList = this.stoneList.concat(newList);\r\n\r\n        this.gameStatus = GAME_STATUS.CONTINUE;\r\n        this.playerStatus = PLAYER_STATUS.SKY;\r\n        this.reviveEnable = true;\r\n\r\n        this.heroVerticalVelocity = VELOCITY * 0.5;\r\n\r\n        var velocity = this.heroVerticalVelocity;\r\n        var acceleration = -1 * GRAVITY;\r\n        var distance = this.groundStone.node.y - this.playerNode.y;\r\n        var dt = Math.max((-velocity + (Math.sqrt(velocity * velocity + 2 * acceleration * distance))) / (acceleration),\r\n            (-velocity - (Math.sqrt(velocity * velocity + 2 * acceleration * distance))) / (acceleration));\r\n        if (dt > 0) {\r\n            var self = this;\r\n            this.node.runAction(cc.sequence(cc.delayTime(dt), cc.callFunc(function () {\r\n                var score = Math.floor(self.playerData.preScore / 1000) * 1000;\r\n                self.groundStone.showScore(score, 'perfect');\r\n                self.totalScore += score;\r\n                self.refreshCountLabel();\r\n            })));\r\n        }\r\n    },\r\n\r\n    doMoveXXXX: function (node, ghostList, time, tpos, easing) {\r\n        var directionX = 0;\r\n        var directionY = 0;\r\n        if (node.x - tpos.x < 0) {\r\n            directionX = -1;\r\n        } else if (node.x - tpos.x > 0) {\r\n            directionX = 1;\r\n        }\r\n        if (node.y - tpos.y < 0) {\r\n            directionY = -1;\r\n        } else if (node.y - tpos.y > 0) {\r\n            directionY = 1;\r\n        }\r\n        var dt = 3;\r\n        if (time <= 3 / 60 * dt + 3 / 60 * dt * ghostList.length) {\r\n            dt = 1;\r\n        }\r\n        var showGold = cc.callFunc(function () {\r\n            for (let i = 0; i < ghostList.length; i++) {\r\n                let name = ghostList[i];\r\n                let childNode = node.getChildByName(name);\r\n                childNode.setPosition(0, 0);\r\n                let index = i + 1;\r\n                let pos = cc.p(directionX * 15 * index, directionY * 15 * index);\r\n                if (dt <= 1) {\r\n                    childNode.runAction(cc.moveTo(1 / 60 * dt * index, pos));\r\n                } else {\r\n                    childNode.runAction(cc.sequence(\r\n                        cc.delayTime(1 / 60 * dt),\r\n                        cc.moveTo(1 / 60 * dt * index, pos)\r\n                    ));\r\n                }\r\n            }\r\n\r\n        });\r\n        var moveAction = cc.moveTo(time, tpos);\r\n        if (easing) {\r\n            moveAction = cc.moveTo(time, tpos).easing(easing)\r\n        } \r\n        var hideGold = cc.callFunc(function () {\r\n            for (let i = 0; i < ghostList.length; i++) {\r\n                let name = ghostList[i];\r\n                let childNode = node.getChildByName(name);\r\n                let index = i + 1;\r\n                childNode.runAction(cc.moveTo(1 / 60 * 2 * index, cc.p(0, 0)));\r\n            }\r\n\r\n        });\r\n\r\n        node.runAction(cc.sequence(\r\n            showGold,\r\n            moveAction,\r\n            hideGold,\r\n        ));\r\n    },\r\n\r\n    addGoodFlyEffect: function (score, perfectCount) {\r\n        var self = this;\r\n        var goldObj = this.getGoldObj();\r\n        goldObj.workStatus = true;\r\n        var gold = goldObj.node;\r\n        gold.active = true;\r\n        gold.opacity = 255;\r\n        gold.setPosition(320, self.playerNode.y + 10);\r\n        let gameCountNode = self.uiNode.getChildByName('gameCount');\r\n        let scoreNum = gameCountNode.getChildByName('scoreNum').getComponentInChildren(cc.Label);\r\n\r\n        let tPos = cc.winSize.height * 0.93 - 80;\r\n\r\n        let scheduler = {};\r\n\r\n        scheduler.target = gold\r\n        scheduler.speed = 1000\r\n        scheduler.interval = 0\r\n\r\n        scheduler.init_x = gold.getPositionX()\r\n        scheduler.init_y = gold.getPositionY()\r\n        scheduler.goldObj = goldObj\r\n\r\n        scheduler.step = 0\r\n        scheduler.totalTime = 0\r\n        scheduler.time = 0\r\n\r\n        let actionName = 'flyGod'\r\n        scheduler.target[actionName] = function (dt) {\r\n            if ('delay' === scheduler.currModle) {\r\n                scheduler.time += dt\r\n                if (scheduler.time >= scheduler.totalTime) {\r\n                    scheduler.totalTime = 0\r\n                    scheduler.time = 0\r\n                    scheduler.step += 1\r\n                    scheduler.currModle = ''\r\n                }\r\n                return;\r\n            }\r\n            switch (scheduler.step) {\r\n                case 0:\r\n                    let moveTime1 = 300 / scheduler.speed;\r\n                    self.doMoveXXXX(scheduler.target, [], moveTime1, cc.p(320, scheduler.target.y + 300));\r\n                    scheduler.totalTime = moveTime1\r\n                    scheduler.time = 0\r\n                    scheduler.step += 1\r\n                    scheduler.currModle = 'delay'\r\n                    break;\r\n                case 2:\r\n                    let worldPos = scheduler.target.convertToWorldSpaceAR(cc.p(0, 0));\r\n                    scheduler.target.parent = self.uiNode;\r\n                    scheduler.target.zIndex = -1;\r\n                    let localPos = self.uiNode.convertToNodeSpace(worldPos);\r\n                    scheduler.target.setPosition(localPos);\r\n\r\n                    scheduler.totalTime = 0\r\n                    scheduler.time = 0\r\n                    scheduler.step += 1\r\n                    break;\r\n                case 3:\r\n                    let time = (tPos - scheduler.target.y) / scheduler.speed;\r\n                    self.doMoveXXXX(scheduler.target, ['gold2', 'gold3', 'gold4'], time, cc.p(320, tPos));\r\n                    scheduler.totalTime = time + 3 * 3 / 60\r\n                    scheduler.time = 0\r\n                    scheduler.step += 1\r\n                    scheduler.currModle = 'delay'\r\n                    break;\r\n                case 5:\r\n                    scheduler.target.runAction(cc.fadeOut(0.1))\r\n                    scheduler.totalTime = 0.1\r\n                    scheduler.time = 0\r\n                    scheduler.step += 1\r\n                    scheduler.currModle = 'delay'\r\n                    break;\r\n                case 7:\r\n                    scheduler.target.parent = self.gameNode;\r\n                    scheduler.target.zIndex = -1;\r\n                    scheduler.target.setPosition(scheduler.init_x, scheduler.init_y);\r\n                    scheduler.target.opacity = 255\r\n                    scheduler.target.active = false;\r\n                    scheduler.goldObj.workStatus = false;\r\n\r\n                    let cb = null;\r\n                    if (!(perfectCount % 5)) {\r\n                        // scoreNum.font = self.perfectFont;\r\n                        // cb = function () {\r\n                        //     scoreNum.font = self.normalFont;\r\n                        // };\r\n                        self.showGoodJobMessage(Math.floor(perfectCount / 5));\r\n                    }\r\n                    self.addShakerEffect(scoreNum.node, 0.1, cb);\r\n                    self.totalScore += score;\r\n                    scoreNum.string = self.totalScore;\r\n\r\n                    // scheduler.target.stopAction(scheduler.target[actionName]);\r\n                    self.unschedule(scheduler.target[actionName]);\r\n                    scheduler.target[actionName] = null;\r\n\r\n                    scheduler.totalTime = 0\r\n                    scheduler.time = 0\r\n                    scheduler.step += 1\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n        this.schedule(scheduler.target[actionName], scheduler.interval);\r\n    },\r\n\r\n    addCloudMoveEffect: function (node) {\r\n        if (node === null) {\r\n            return;\r\n        }\r\n        let actionName = 'CloudMoveEffect';\r\n        if (node[actionName]) {\r\n            this.unschedule(node[actionName]);\r\n            // console.warn();\r\n            node[actionName] = null;\r\n        }\r\n        let moveActionInfo = {}\r\n        moveActionInfo.speed_min = 10\r\n        moveActionInfo.speed_max = 30\r\n        moveActionInfo.currSpeed = moveActionInfo.speed_min + Math.random() * (moveActionInfo.speed_max - moveActionInfo.speed_min)\r\n        // moveActionInfo.init_x = 0\r\n        moveActionInfo.init_y = 0\r\n\r\n        moveActionInfo.target = node\r\n        // moveActionInfo.init_x = node.getPositionX()\r\n        moveActionInfo.init_y = node.getPositionY()\r\n\r\n        moveActionInfo.target[actionName] = function (dt) {\r\n            moveActionInfo.target.x += moveActionInfo.currSpeed * dt\r\n            let currWorldPos = moveActionInfo.target.convertToWorldSpaceAR(cc.p(0, 0))\r\n            if ((currWorldPos.x - moveActionInfo.target.width / 2 * moveActionInfo.target.scale) >= cc.winSize.width) {\r\n                let x = 0 - 100 * Math.random() - node.width / 2\r\n                let y = moveActionInfo.init_y\r\n                moveActionInfo.target.setPosition(x, y);\r\n                moveActionInfo.currSpeed = moveActionInfo.speed_min + Math.random() * (moveActionInfo.speed_max - moveActionInfo.speed_min)\r\n            }\r\n        };\r\n        this.schedule(moveActionInfo.target[actionName], 0);\r\n    },\r\n\r\n    addShakerEffect: function (node, time, endCallBack) {\r\n        if (time === null && node === null) {\r\n            return;\r\n        }\r\n        var self = this;\r\n        let actionName = 'ShakerActionName';\r\n\r\n        let shaker = {}\r\n        shaker.init_x = 0       //[[初始位置x]]\r\n        shaker.init_y = 0       //[[初始位置y]]\r\n        shaker.diff_x = 0       //[[偏移量x]]\r\n        shaker.diff_y = 0       //[[偏移量y]]\r\n        shaker.diff_max = 10     //[[最大偏移量]]\r\n        shaker.interval = 0.01  //[[震动频率]]\r\n        shaker.totalTime = 0    //[[震动时间]]\r\n        shaker.time = 0         //[[计时器]]\r\n\r\n        shaker.target = node\r\n        shaker.init_x = node.getPositionX()\r\n        shaker.init_y = node.getPositionY()\r\n        shaker.totalTime = time\r\n\r\n        shaker.target[actionName] = function (dt) {\r\n            if (shaker.time >= shaker.totalTime) {\r\n                // shaker.target.stopAction(shaker.target[actionName]);\r\n                self.unschedule(shaker.target[actionName]);\r\n                shaker.target[actionName] = null;\r\n                shaker.target.setPosition(shaker.init_x, shaker.init_y);\r\n                endCallBack && endCallBack();\r\n                endCallBack = null;\r\n                return;\r\n            }\r\n            shaker.time = shaker.time + shaker.interval\r\n            shaker.diff_x = Math.random() * (shaker.diff_max + shaker.diff_max + 1) - shaker.diff_max;\r\n            shaker.diff_y = Math.random() * (shaker.diff_max + shaker.diff_max + 1) - shaker.diff_max;\r\n            shaker.target.setPosition(shaker.init_x + shaker.diff_x, shaker.init_y + shaker.diff_y);\r\n        };\r\n        // this.schedule(, shaker.interval);\r\n        this.schedule(shaker.target[actionName], shaker.interval);\r\n    },\r\n\r\n    showSharerInfo: function () {\r\n        return;\r\n        var shareInfo = AF.util.getShareInfo();\r\n        if (shareInfo && shareInfo['challenge']) {\r\n            var self = this;\r\n            var challenge = JSON.parse(shareInfo['challenge']);\r\n            var sharerOpenId = challenge['sharerOpenId'];\r\n            var sharerNickName = challenge['sharerNickName'];\r\n            AF.util.getAvatarUrl(sharerOpenId, (openId, avatarUrl) => {\r\n                if (openId === sharerOpenId) {\r\n                    self.photoScript.setBigPhoto(avatarUrl);\r\n                }\r\n            });\r\n            var score = challenge['score'];\r\n            this.sharerOpenId.string = 'ID:' + sharerOpenId;\r\n            this.sharerNickName.string = '昵称:' + sharerNickName;\r\n            this.score.string = '分数:' + score;\r\n        }\r\n    },\r\n    \r\n    onGameBGM: function (dt) {\r\n        AF.EventDispatcher.emit(AF.Event.GAME_ON_BGM);\r\n    },\r\n});\r\n\r\n    /*getNexStoneList: function (lastStone, minLength, maxLength) {\r\n        minLength = minLength || 3;\r\n        maxLength = maxLength || 5;\r\n\r\n        var direction = 0;\r\n        if (lastStone) {\r\n            if (lastStone.velocity < 0) {\r\n                direction = 1;\r\n            } else if (lastStone.velocity > 0) {\r\n                direction = -1;\r\n            }\r\n        }\r\n        if (!direction) {\r\n            if (Math.ceil(Math.random() * 1000) % 2) {\r\n                direction = 1;\r\n            } else {\r\n                direction = -1;\r\n            }\r\n        }\r\n\r\n\r\n        var startX = cc.winSize.width * 3 / 2;\r\n        var startY = GROUND_HEIGHT;\r\n        var baseMoveTime = 0;\r\n        var baseVelocity = 100;\r\n        var baseAcceleration = 0;\r\n\r\n        if (lastStone) {\r\n            startY = lastStone.script.node.y + STONE_INTERVAL;\r\n            baseMoveTime = AF.util.getMoveTime(Math.abs(lastStone.script.node.x - cc.winSize.width / 2), lastStone.velocity, lastStone.acceleration);\r\n            if (lastStone.delayTime > 0) {\r\n                baseMoveTime += lastStone.delayTime;\r\n            }\r\n            baseVelocity = lastStone.velocity;\r\n            baseAcceleration = lastStone.acceleration;\r\n        }\r\n        if (direction > 0) {\r\n            startX = -1 * cc.winSize.width / 2\r\n        }\r\n        var width = 0;\r\n        var minSpeed = 160;\r\n        var maxSpeed = 260;\r\n        var baseDt = 0.8;\r\n\r\n        if (startY < 20 * STONE_INTERVAL) {\r\n            width = stone_velocity_config.low.width;\r\n            baseDt = stone_velocity_config.low.baseDt;\r\n            minSpeed = stone_velocity_config.low.minSpeed;\r\n            maxSpeed = stone_velocity_config.low.maxSpeed;\r\n        } else if (startY < 50 * STONE_INTERVAL) {\r\n            width = stone_velocity_config.middle.width;\r\n            baseDt = stone_velocity_config.middle.baseDt;\r\n            minSpeed = stone_velocity_config.middle.minSpeed;\r\n            maxSpeed = stone_velocity_config.middle.maxSpeed;\r\n        } else {\r\n            //else if (startY < 125 * STONE_INTERVAL)\r\n            width = stone_velocity_config.height.width;\r\n            baseDt = stone_velocity_config.height.baseDt;\r\n            minSpeed = stone_velocity_config.height.minSpeed;\r\n            maxSpeed = stone_velocity_config.height.maxSpeed;\r\n        }\r\n\r\n        //规则 晚创建的一定要比先创建的晚到中心点\r\n        var preMoveTime = baseMoveTime + 0.2;\r\n        var preVelocity = direction * (minSpeed + Math.random() * (maxSpeed - minSpeed));\r\n        var preAcceleration = baseAcceleration;\r\n\r\n        var stoneList = [];\r\n        var num = minLength + Math.ceil(Math.random() * (maxLength - minLength));\r\n        for (let i = 0; i < num; i++) {\r\n            let stoneScript = this.getStone();\r\n            stoneScript.init();\r\n            stoneScript.setStoneType('stone');\r\n            stoneScript.setStoneRect(width, STONE_INTERVAL);\r\n            stoneScript.setNewColor(width);\r\n\r\n            stoneScript.node.setPosition(startX, startY + i * STONE_INTERVAL);\r\n            stoneScript.node.zIndex = 5;\r\n\r\n            let acceleration = 0;\r\n\r\n            // let velocity = preVelocity + 0.8 * Math.random() * preVelocity;\r\n            // while (Math.abs(velocity) > MAX_STONE_SPEED) {\r\n            //     velocity = preVelocity + 0.8 * Math.random() * preVelocity;\r\n            // }\r\n\r\n            let velocity = direction * minSpeed;\r\n            if (i > 0) {\r\n                velocity = preVelocity + direction * 0.8 * Math.random() * Math.abs(maxSpeed - Math.abs(preVelocity));\r\n                while (Math.abs(velocity) > maxSpeed) {\r\n                    velocity = preVelocity + direction * 0.8 * Math.random() * Math.abs(maxSpeed - Math.abs(preVelocity));\r\n                }\r\n            }\r\n            // console.log(velocity);\r\n            // 0.2\r\n            let moveTime = AF.util.getMoveTime(Math.abs(startX - cc.winSize.width / 2), velocity, acceleration);\r\n            let delayTime = preMoveTime - moveTime + baseDt;\r\n\r\n            if (delayTime < 0) {\r\n                delayTime = 0;\r\n            }\r\n\r\n            if (!lastStone && !i) {\r\n                delayTime = 1;\r\n            }\r\n\r\n            let stoneObj = {\r\n                script: stoneScript,\r\n                type: 'stone',\r\n                velocity: velocity,\r\n                acceleration: acceleration,\r\n                delayTime: delayTime,\r\n            };\r\n            stoneList.push(stoneObj);\r\n\r\n            preMoveTime = moveTime + delayTime;\r\n            preVelocity = velocity;\r\n            preAcceleration = acceleration;\r\n        }\r\n\r\n        //匀速模式\r\n\r\n        //   加速度模式\r\n        // + 加速度模式\r\n        // - 加速度模式\r\n        return stoneList;\r\n    },*/\r\n"]}