{"version":3,"sources":["../../../../../assets/framework/utils/assets/framework/utils/af-downloader.js"],"names":["Downloader","init","allDownloadFiles","Array","currentDownloadFileInfo","startDownloadFile","filename","isNotSave","AF","util","isZipFile","platform","isWxApp","isQQApp","EventDispatcher","emit","Event","FILE_DOWNLOAD","getRemoteUrl","index","length","push","processDownloadFile","isUnzip","splice","loadPath","state","self","result","makesureLocalPath","tempFilePath","filePath","getLocalFilePath","wx","downloadFile","url","header","success","res","statusCode","isLocalFileExist","fail","err","complete","console","log","fs","getFileSystemManager","unzip","zipFilePath","targetPath","getFilePath","getZipFilename","BK","Http","request","method","headers","body","JSON","stringify","fileSystem","writeFileSync","arrayBuffer","localTempFilePath","getLocalFilePath2","isLocalFileExist2","errObj","unzipSync","module","exports"],"mappings":"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","file":"af-downloader.js","sourceRoot":"../../../../../assets/framework/utils","sourcesContent":["/**\r\n * 下载管理器函数\r\n */\r\n\r\nvar Downloader = {\r\n    init: function () {\r\n        this.allDownloadFiles = new Array();\r\n        this.currentDownloadFileInfo = null;\r\n    },\r\n    //下载文件名（必须存在于remote下,必填字段） isNotSave => false保存 true 不保存 =>默认缺省保存 zip不保存\r\n    startDownloadFile: function (filename, isNotSave) {\r\n        isNotSave = isNotSave || false;\r\n        if (AF.util.isZipFile(filename)) {\r\n            isNotSave = true;\r\n        }\r\n        if (!AF.platform.isWxApp() && !AF.platform.isQQApp()) {\r\n            AF.EventDispatcher.emit(AF.Event.FILE_DOWNLOAD, filename, AF.util.getRemoteUrl(filename), true);\r\n            return;\r\n        }\r\n        if (this.currentDownloadFileInfo && this.currentDownloadFileInfo.filename === filename) return;\r\n        for (let index = 0; index < this.allDownloadFiles.length; index++) {\r\n            if (this.allDownloadFiles[index].filename === filename)\r\n                return;\r\n        }\r\n        this.allDownloadFiles.push({ filename: filename, isNotSave: isNotSave });\r\n        this.processDownloadFile();\r\n    },\r\n    processDownloadFile: function () {\r\n        if (this.currentDownloadFileInfo) return;\r\n        if (0 >= this.allDownloadFiles.length) return;\r\n\r\n        this.currentDownloadFileInfo = this.allDownloadFiles[0];\r\n        this.currentDownloadFileInfo.isUnzip = false;\r\n        this.allDownloadFiles.splice(0, 1);\r\n        var loadPath = '';\r\n        var state = true;\r\n\r\n        var self = this;\r\n        var result = AF.util.makesureLocalPath(self.currentDownloadFileInfo.filename);\r\n        if (!result) {\r\n            state = false;\r\n            AF.EventDispatcher.emit(\r\n                AF.Event.FILE_DOWNLOAD,\r\n                self.currentDownloadFileInfo.filename,\r\n                AF.util.getRemoteUrl(self.currentDownloadFileInfo.filename),\r\n                state);\r\n            this.currentDownloadFileInfo = null;\r\n            self.processDownloadFile();\r\n            return;\r\n        }\r\n        var filename = self.currentDownloadFileInfo.filename;\r\n        var tempFilePath = '';\r\n        var filePath = '';\r\n        if (!self.currentDownloadFileInfo.isNotSave) {\r\n            filePath = AF.util.getLocalFilePath(filename);\r\n        }\r\n        if (AF.platform.isWxApp()) {\r\n            wx.downloadFile({\r\n                url: AF.util.getRemoteUrl(filename),\r\n                header: {},\r\n                filePath: filePath,\r\n                success: function (res) {\r\n                    self.currentDownloadFileInfo.isUnzip = false;\r\n                    if (res.statusCode < 200 || res.statusCode >= 300) {\r\n                        state = false;\r\n                        if (AF.util.isZipFile(filename)) {\r\n                            loadPath = '';\r\n                        } else {\r\n                            loadPath = AF.util.getRemoteUrl(filename);\r\n                        }\r\n                        return;\r\n                    }\r\n    \r\n                    if (!self.currentDownloadFileInfo.isNotSave) {\r\n                        if (AF.util.isLocalFileExist(filename)) {\r\n                            state = true;\r\n                            loadPath = AF.util.getLocalFilePath(filename);\r\n                            return;\r\n                        }\r\n                        state = false;\r\n                        loadPath = AF.util.getRemoteUrl(filename);\r\n                    } else if (AF.util.isZipFile(filename)) {\r\n                        tempFilePath = res.tempFilePath;\r\n                        self.currentDownloadFileInfo.isUnzip = true;\r\n                    } else {\r\n                        state = true;\r\n                        loadPath = res.tempFilePath;\r\n                    }\r\n                },\r\n                fail: function (err) {\r\n                    state = false;\r\n    \r\n                    if (AF.util.isZipFile(filename)) {\r\n                        loadPath = '';\r\n                    } else {\r\n                        loadPath = AF.util.getRemoteUrl(filename);\r\n                    }\r\n                },\r\n                complete: function () {\r\n                    \r\n                    var isUnzip = self.currentDownloadFileInfo.isUnzip;\r\n                    console.log('wx.downloadFile complet: ' + filename + ' ,isUnzip:' + isUnzip + ' ,state:' + state);\r\n    \r\n                    if (isUnzip) {\r\n                        var fs = wx.getFileSystemManager();\r\n                        fs.unzip({\r\n                            zipFilePath: tempFilePath,\r\n                            targetPath: AF.util.getLocalFilePath(AF.util.getFilePath(filename)),\r\n                            success: function (res) {\r\n                                loadPath = AF.util.getLocalFilePath(AF.util.getZipFilename(filename));\r\n                                state = true;\r\n                            },\r\n                            fail: function (res) {\r\n                                state = false;\r\n                                loadPath = '';\r\n                            },\r\n                            complete: function () {\r\n                                console.log('fs.unzip complete: ' + filename + ' ,state:' + state);\r\n                                AF.EventDispatcher.emit(AF.Event.FILE_DOWNLOAD, filename, loadPath, state);\r\n                                self.currentDownloadFileInfo = null;\r\n                                self.processDownloadFile();\r\n                            }\r\n                        });\r\n                        return;\r\n                    }\r\n                    AF.EventDispatcher.emit(AF.Event.FILE_DOWNLOAD, filename, loadPath, state);\r\n                    self.currentDownloadFileInfo = null;\r\n                    self.processDownloadFile();\r\n                }\r\n            });\r\n        } else if (AF.platform.isQQApp()) {\r\n            BK.Http.request({\r\n                url: AF.util.getRemoteUrl(filename),\r\n                method: 'GET',\r\n                headers: {\r\n                    'Referer': 'https://hudong.qq.com',\r\n                    'User-Agent': 'brick-client',\r\n                    'Content-Type': 'application/octet-stream'\r\n                },\r\n                body: '',\r\n                success: function (res) {\r\n                    console.log('statusCode', res.statusCode);\r\n                    console.log('headers', JSON.stringify(res.headers));\r\n\r\n                    self.currentDownloadFileInfo.isUnzip = false;\r\n                    if (res.statusCode < 200 || res.statusCode >= 300) {\r\n                        state = false;\r\n                        if (AF.util.isZipFile(filename)) {\r\n                            loadPath = '';\r\n                        } else {\r\n                            loadPath = AF.util.getRemoteUrl(filename);\r\n                        }\r\n                        return;\r\n                    }\r\n\r\n                    //尝试保存临时文件\r\n    \r\n                    if (!self.currentDownloadFileInfo.isNotSave) {\r\n                        BK.fileSystem.writeFileSync(AF.util.getLocalFilePath(filename), res.arrayBuffer());\r\n\r\n                        //尝试存一次\r\n                        if (AF.util.isLocalFileExist(filename)) {\r\n                            state = true;\r\n                            loadPath = AF.util.getLocalFilePath(filename);\r\n                            return;\r\n                        }\r\n                        state = false;\r\n                        loadPath = AF.util.getRemoteUrl(filename);\r\n                    } else if (AF.util.isZipFile(filename)) {\r\n                        //尝试存储临时随机文件名zip\r\n                        var localTempFilePath = \"temp/\" + filename;\r\n                        BK.fileSystem.writeFileSync(AF.util.getLocalFilePath2(localTempFilePath), res.arrayBuffer());\r\n\r\n                        if (AF.util.isLocalFileExist2(localTempFilePath)) {\r\n                            tempFilePath = AF.util.getLocalFilePath2(localTempFilePath);\r\n                            self.currentDownloadFileInfo.isUnzip = true;\r\n                        } else {\r\n                            state = false;\r\n                            loadPath = '';\r\n                        }\r\n                    } else {\r\n\r\n                        console.log(\"成功6\");\r\n                        //尝试保存\r\n\r\n                        if (filePath) {\r\n                            console.log(\"成功7\");\r\n                            BK.fileSystem.writeFileSync(AF.util.getLocalFilePath(filename), res.arrayBuffer());\r\n                            state = true;\r\n                            loadPath = AF.util.getLocalFilePath(filename);\r\n                        } else {\r\n                            console.log(\"成功8\");\r\n                            //保存成临时文件\r\n                            state = true;\r\n                            loadPath = AF.util.getLocalFilePath2(\"temp/temp_\" + filename);\r\n                            BK.fileSystem.writeFileSync(loadPath, res.arrayBuffer());\r\n                        }\r\n\r\n                        console.log(\"成功9\");\r\n                    }\r\n                },\r\n                fail: function (errObj) {\r\n\r\n                    console.log(\"下载失败\");\r\n\r\n                    state = false;\r\n    \r\n                    if (AF.util.isZipFile(filename)) {\r\n                        loadPath = '';\r\n                    } else {\r\n                        loadPath = AF.util.getRemoteUrl(filename);\r\n                    }\r\n                },\r\n                complete: function () {\r\n                    var isUnzip = self.currentDownloadFileInfo.isUnzip;\r\n                    console.log('qq.downloadFile complet: ' + filename + ' ,isUnzip:' + isUnzip + ' ,state:' + state);\r\n    \r\n                    if (isUnzip) {\r\n                        BK.fileSystem.unzipSync(tempFilePath, AF.util.getLocalFilePath(AF.util.getFilePath(filename)));\r\n\r\n                        loadPath = AF.util.getLocalFilePath(AF.util.getZipFilename(filename));\r\n                        state = true;\r\n                    }\r\n\r\n                    AF.EventDispatcher.emit(AF.Event.FILE_DOWNLOAD, filename, loadPath, state);\r\n                    self.currentDownloadFileInfo = null;\r\n                    self.processDownloadFile();\r\n                },\r\n            });\r\n\r\n            /*\r\n            wx.downloadFile({\r\n                url: AF.util.getRemoteUrl(filename),\r\n                header: {},\r\n                filePath: filePath,\r\n                success: function (res) {\r\n                    self.currentDownloadFileInfo.isUnzip = false;\r\n                    if (res.statusCode < 200 || res.statusCode >= 300) {\r\n                        state = false;\r\n                        if (AF.util.isZipFile(filename)) {\r\n                            loadPath = '';\r\n                        } else {\r\n                            loadPath = AF.util.getRemoteUrl(filename);\r\n                        }\r\n                        return;\r\n                    }\r\n    \r\n                    if (!self.currentDownloadFileInfo.isNotSave) {\r\n                        if (AF.util.isLocalFileExist(filename)) {\r\n                            state = true;\r\n                            loadPath = AF.util.getLocalFilePath(filename);\r\n                            return;\r\n                        }\r\n                        state = false;\r\n                        loadPath = AF.util.getRemoteUrl(filename);\r\n                    } else if (AF.util.isZipFile(filename)) {\r\n                        tempFilePath = res.tempFilePath;\r\n                        self.currentDownloadFileInfo.isUnzip = true;\r\n                    } else {\r\n                        state = true;\r\n                        loadPath = res.tempFilePath;\r\n                    }\r\n                },\r\n                fail: function (err) {\r\n                    state = false;\r\n    \r\n                    if (AF.util.isZipFile(filename)) {\r\n                        loadPath = '';\r\n                        state = false;\r\n                    }\r\n                    loadPath = AF.util.getRemoteUrl(filename);\r\n                },\r\n                complete: function () {\r\n                    \r\n                    var isUnzip = self.currentDownloadFileInfo.isUnzip;\r\n                    console.log('wx.downloadFile complet: ' + filename + ' ,isUnzip:' + isUnzip + ' ,state:' + state);\r\n    \r\n                    if (isUnzip) {\r\n                        var fs = wx.getFileSystemManager();\r\n                        fs.unzip({\r\n                            zipFilePath: tempFilePath,\r\n                            targetPath: AF.util.getLocalFilePath(AF.util.getFilePath(filename)),\r\n                            success: function (res) {\r\n                                loadPath = AF.util.getLocalFilePath(AF.util.getZipFilename(filename));\r\n                                state = true;\r\n                            },\r\n                            fail: function (res) {\r\n                                state = false;\r\n                                loadPath = '';\r\n                            },\r\n                            complete: function () {\r\n                                console.log('fs.unzip complete: ' + filename + ' ,state:' + state);\r\n                                AF.EventDispatcher.emit(AF.Event.FILE_DOWNLOAD, filename, loadPath, state);\r\n                                self.currentDownloadFileInfo = null;\r\n                                self.processDownloadFile();\r\n                            }\r\n                        });\r\n                        return;\r\n                    }\r\n                    AF.EventDispatcher.emit(AF.Event.FILE_DOWNLOAD, filename, loadPath, state);\r\n                    self.currentDownloadFileInfo = null;\r\n                    self.processDownloadFile();\r\n                }\r\n            });\r\n            */\r\n        }\r\n        \r\n    },\r\n\r\n};\r\n\r\nDownloader.init();\r\n\r\nAF.Downloader = module.exports = Downloader;\r\n"]}