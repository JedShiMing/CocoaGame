{"version":3,"sources":["../../../../../../assets/hall/ui/dialog/assets/hall/ui/dialog/HallBalanceDialog.js"],"names":["DialogBase","require","cc","Class","extends","properties","node_light","Node","node_starCon","node_next","onLoad","prototype","call","onEnable","params","AF","DIALOG_PARAMS","pointId","GameData","getMyPlayerData","over","scheduleOnce","openDialog","costTime","EventDispatcher","emit","startAnimation","animation","node","getComponent","Animation","setCurrentTime","play","rotation","runAction","repeatForever","sequence","rotateTo","children","forEach","scale","scaleTo","onDisable","stopAllActions","next","close","goToHome","challenge","util","shareAppMessage","console","log","score"],"mappings":"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","file":"HallBalanceDialog.js","sourceRoot":"../../../../../../assets/hall/ui/dialog","sourcesContent":["var DialogBase = require('AFDialogBase');\r\n\r\ncc.Class({\r\n    extends: DialogBase,\r\n\r\n    properties: {\r\n        node_light: cc.Node,\r\n        node_starCon: cc.Node,\r\n        node_next: cc.Node,\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n    onLoad: function () {\r\n        DialogBase.prototype.onLoad.call(this);\r\n    },\r\n\r\n    onEnable: function () {\r\n        DialogBase.prototype.onEnable.call(this);\r\n        this.params = AF.DIALOG_PARAMS()\r\n        let pointId = AF.GameData.getMyPlayerData().pointId\r\n        if(this.params.pointId % 25 === 0 && this.params.over){\r\n            this.scheduleOnce(()=> AF.openDialog(\"HallGiftDialog\", { costTime:this.params.costTime, pointId: this.params.pointId}),0.1)\r\n        }else{\r\n            this.scheduleOnce(()=> AF.EventDispatcher.emit('ShowBalancePassed', {pointId: this.params.pointId,costTime:this.params.costTime}),0.5)\r\n        }\r\n\r\n        this.startAnimation()\r\n    },\r\n    startAnimation(){\r\n        const animation = this.node.getComponent(cc.Animation)\r\n        animation.setCurrentTime(0)\r\n        animation.play('balance', 0)\r\n\r\n        this.node_light.rotation = 0\r\n        this.node_light.runAction(cc.repeatForever(cc.sequence(\r\n            cc.rotateTo(1,90),\r\n            cc.rotateTo(1,180),\r\n            cc.rotateTo(1,270),\r\n            cc.rotateTo(1,0))));\r\n\r\n        this.node_starCon.children.forEach(node=>{\r\n            node.scale = 1;\r\n            node.runAction(cc.repeatForever(cc.sequence(\r\n                cc.scaleTo(0.6,1.2,1.2),\r\n                cc.scaleTo(0.6,1,1),\r\n            )))\r\n        })\r\n        this.node_next.scale = 1\r\n        this.node_next.runAction(cc.repeatForever(cc.sequence(\r\n            cc.scaleTo(0.6,0.9,0.9),\r\n            cc.scaleTo(0.6,1,1),\r\n        )))\r\n        // this.node_buttons.active = false\r\n        // this.node_light.scale = 0\r\n        // this.node_starCon.scale = 0\r\n        // this.node_win.scale = 2\r\n        //\r\n        // this.node_win.runAction(cc.scaleTo(0.2, 1, 1))\r\n\r\n    },\r\n    onDisable: function () {\r\n        DialogBase.prototype.onDisable.call(this);\r\n        AF.EventDispatcher.emit('HideBalancePassed')\r\n\r\n        this.node_light.stopAllActions()\r\n        this.node_next.stopAllActions()\r\n        this.node_starCon.children.forEach(node=>{\r\n            node.stopAllActions()\r\n        })\r\n    },\r\n    next() {\r\n        this.close()\r\n        this.params.next()\r\n    },\r\n    goToHome() {\r\n        this.close()\r\n        this.params.close()\r\n    },\r\n    challenge() {\r\n        AF.util.shareAppMessage(null, () => {\r\n            console.log('suc')\r\n        }, () => {\r\n            console.log('fail')\r\n        }, {score: this.params.pointId}, 'challenge')\r\n    },\r\n});\r\n"]}