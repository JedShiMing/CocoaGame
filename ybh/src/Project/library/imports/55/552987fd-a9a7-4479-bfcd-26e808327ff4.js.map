{"version":3,"sources":["../../../../../../assets/framework/ui/base/assets/framework/ui/base/AFNetSpriteBase.js"],"names":["window","AF","AFNetSpriteBase","cc","Class","extends","Component","properties","onLoad","listenDownload","listenNetSprite","listenDownloadFilename","listenNetSpriteFilename","isLoaded","setFileName","filename","node","opacity","clearListen","util","isLocalFileExist","EventDispatcher","on","Event","FILE_LOADNETSPRITE","onFrameLoaded","NetSpriteloader","startLoadNetSprite","FILE_DOWNLOAD","onFileDownloaded","Downloader","startDownloadFile","url","spriteFrame","succ","creatSprite","sprite","getComponent","Sprite","off","onDestroy","checkLoaded"],"mappings":"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","file":"AFNetSpriteBase.js","sourceRoot":"../../../../../../assets/framework/ui/base","sourcesContent":["(window.AF = window.AF || {}).AFNetSpriteBase = cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n\r\n    },\r\n\r\n    onLoad: function () {\r\n        this.listenDownload = false;\r\n        this.listenNetSprite = false;\r\n        this.listenDownloadFilename = \"\";\r\n        this.listenNetSpriteFilename = \"\";\r\n        this.isLoaded = false;\r\n\r\n    },\r\n\r\n    setFileName: function (filename) {\r\n        \r\n        this.node.opacity = 0;\r\n\r\n        this.clearListen();\r\n        this.isLoaded = false;\r\n        if (AF.util.isLocalFileExist(filename)) {\r\n            if (!this.listenNetSprite) {\r\n                AF.EventDispatcher.on(AF.Event.FILE_LOADNETSPRITE, this.onFrameLoaded, this);\r\n                this.listenNetSprite = true;\r\n            }\r\n            this.listenNetSpriteFilename = filename;\r\n            AF.NetSpriteloader.startLoadNetSprite(filename);\r\n        } else {\r\n            if (!this.listenDownload) {\r\n                AF.EventDispatcher.on(AF.Event.FILE_DOWNLOAD, this.onFileDownloaded, this);\r\n                this.listenDownload = true;\r\n            }\r\n            this.listenDownloadFilename = filename;\r\n            AF.Downloader.startDownloadFile(filename);\r\n        }\r\n    },\r\n\r\n\r\n    onFileDownloaded: function (filename, url) {\r\n        if (this.listenDownloadFilename !== filename) {\r\n            return;\r\n        } else {\r\n            this.clearListen();\r\n            if (!this.listenNetSprite) {\r\n                AF.EventDispatcher.on(AF.Event.FILE_LOADNETSPRITE, this.onFrameLoaded, this);\r\n                this.listenNetSprite = true;\r\n            }\r\n            this.listenNetSpriteFilename = filename;\r\n            AF.NetSpriteloader.startLoadNetSprite(filename);\r\n        }\r\n    },\r\n\r\n\r\n    onFrameLoaded: function (filename, spriteFrame, succ) {\r\n        if (this.listenNetSpriteFilename !== filename) return;\r\n\r\n        if (!succ || !spriteFrame) return;\r\n        this.creatSprite(spriteFrame);\r\n    },\r\n\r\n    creatSprite: function (spriteFrame) {\r\n        this.clearListen();\r\n        this.node.opacity = 255;\r\n        if(!this.sprite){\r\n            this.sprite = this.node.getComponent(cc.Sprite);\r\n        }\r\n        if(this.sprite){\r\n            this.sprite.spriteFrame = spriteFrame;\r\n        }\r\n        this.isLoaded = true;\r\n    },\r\n\r\n    clearListen: function () {\r\n        if (this.listenDownload) {\r\n            AF.EventDispatcher.off(AF.Event.FILE_DOWNLOAD, this.onFileDownloaded, this);\r\n            this.listenDownload = false;\r\n            this.listenDownloadFilename = \"\";\r\n        }\r\n        if (this.listenNetSprite) {\r\n            AF.EventDispatcher.off(AF.Event.FILE_LOADNETSPRITE, this.onFrameLoaded, this);\r\n            this.listenNetSprite = false;\r\n            this.listenNetSpriteFilename = \"\";\r\n        }\r\n    },\r\n\r\n\r\n    onDestroy: function () {\r\n        this.clearListen();\r\n    },\r\n\r\n    checkLoaded: function () {\r\n        return this.isLoaded;\r\n    },\r\n});"]}